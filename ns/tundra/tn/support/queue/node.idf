<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="encodeutf8">true</value>
  <value name="shared">cHJvdGVjdGVkIGZpbmFsIHN0YXRpYyBTdHJpbmcgRVhFQ1VURV9UQVNLX1NFUlZJQ0VfTkFNRSA9
ICJ0dW5kcmEudG4uc3VwcG9ydC5xdWV1ZS50YXNrOmV4ZWN1dGUiOwpwcm90ZWN0ZWQgZmluYWwg
c3RhdGljIFN0cmluZyBERUxJVkVSX0JBVENIX1NFUlZJQ0VfTkFNRSA9ICJ3bS50bi5xdWV1aW5n
OmRlbGl2ZXJCYXRjaCI7CgovLyBkZXF1ZXVlcyBlYWNoIHRhc2sgb24gdGhlIGdpdmVuIFROIHF1
ZXVlLCBhbmQgcHJvY2Vzc2VzIHRoZSB0YXNrIHVzaW5nIHRoZSBnaXZlbiBzZXJ2aWNlIGFuZCBp
bnB1dCBwaXBlbGluZTsKLy8gaWYgY29uY3VycmVuY3kgPiAxLCB0YXNrcyB3aWxsIGJlIHByb2Nl
c3NlZCBieSBhIHRocmVhZCBwb29sIHdob3NlIHNpemUgaXMgZXF1YWwgdG8gdGhlIGRlc2lyZWQg
Y29uY3VycmVuY3ksCi8vIG90aGVyd2lzZSB0aGV5IHdpbGwgYmUgcHJvY2Vzc2VkIG9uIHRoZSBj
dXJyZW50IHRocmVhZApwdWJsaWMgc3RhdGljIHZvaWQgZWFjaChTdHJpbmcgcXVldWVOYW1lLCBT
dHJpbmcgc2VydmljZSwgSURhdGEgcGlwZWxpbmUsIGludCBjb25jdXJyZW5jeSwgaW50IGxpbWl0
KSB0aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7CiAgdHJ5IHsKICAgIGlmIChsaW1pdCA8PSAwKSBs
aW1pdCA9IEludGVnZXIuTUFYX1ZBTFVFOwoKICAgIGNvbS53bS5hcHAudG4uZGVsaXZlcnkuRGVs
aXZlcnlRdWV1ZSBxdWV1ZSA9IGNvbS53bS5hcHAudG4uZGIuUXVldWVPcGVyYXRpb25zLnNlbGVj
dEJ5TmFtZShxdWV1ZU5hbWUpOwogICAgaWYgKHF1ZXVlID09IG51bGwpIHRocm93IG5ldyBTZXJ2
aWNlRXhjZXB0aW9uKCJRdWV1ZSAnIiArIHF1ZXVlTmFtZSArICInIGRvZXMgbm90IGV4aXN0Iik7
CgogICAgY29tLndtLmxhbmcubnMuTlNOYW1lIGV4ZWN1dGVUYXNrU2VydmljZSA9IGNvbS53bS5s
YW5nLm5zLk5TTmFtZS5jcmVhdGUoRVhFQ1VURV9UQVNLX1NFUlZJQ0VfTkFNRSk7CgogICAgaWYg
KGNvbmN1cnJlbmN5IDw9IDEpIHsKICAgICAgZWFjaERpcmVjdChxdWV1ZSwgZXhlY3V0ZVRhc2tT
ZXJ2aWNlLCBzZXJ2aWNlLCBwaXBlbGluZSwgbGltaXQpOwogICAgfSBlbHNlIHsKICAgICAgZWFj
aENvbmN1cnJlbnQocXVldWUsIGV4ZWN1dGVUYXNrU2VydmljZSwgc2VydmljZSwgcGlwZWxpbmUs
IGNvbmN1cnJlbmN5LCBsaW1pdCk7CiAgICB9CiAgfSBjYXRjaCAoamF2YS5zcWwuU1FMRXhjZXB0
aW9uIGV4KSB7CiAgICB0aHJvdyBuZXcgU2VydmljZUV4Y2VwdGlvbihleC5nZXRDbGFzcygpLmdl
dE5hbWUoKSArICI6ICIgKyBleC5nZXRNZXNzYWdlKCkpOwogIH0gY2F0Y2ggKGphdmEuaW8uSU9F
eGNlcHRpb24gZXgpIHsKICAgIHRocm93IG5ldyBTZXJ2aWNlRXhjZXB0aW9uKGV4LmdldENsYXNz
KCkuZ2V0TmFtZSgpICsgIjogIiArIGV4LmdldE1lc3NhZ2UoKSk7CiAgfQp9CgovLyBkZXF1ZXVl
cyBlYWNoIHRhc2sgb24gdGhlIGdpdmVuIFROIHF1ZXVlLCBhbmQgcHJvY2Vzc2VzIHRoZSB0YXNr
IHVzaW5nIHRoZSBnaXZlbiBzZXJ2aWNlIGFuZCBpbnB1dCBwaXBlbGluZQovLyBvbiB0aGUgY3Vy
cmVudCB0aHJlYWQKcHJvdGVjdGVkIHN0YXRpYyB2b2lkIGVhY2hEaXJlY3QoY29tLndtLmFwcC50
bi5kZWxpdmVyeS5EZWxpdmVyeVF1ZXVlIHF1ZXVlLCBjb20ud20ubGFuZy5ucy5OU05hbWUgZXhl
Y3V0ZVRhc2tTZXJ2aWNlLCBTdHJpbmcgc2VydmljZSwgSURhdGEgcGlwZWxpbmUsIGludCBsaW1p
dCkgdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24gewogIHRyeSB7CiAgICBib29sZWFuIGludm9rZWRC
eVRyYWRpbmdOZXR3b3JrcyA9IGludm9rZWRCeVRyYWRpbmdOZXR3b3JrcygpOwogICAgaW50IHRv
dGFsID0gMDsKICAgIHdoaWxlKHRvdGFsIDwgbGltaXQpIHsKICAgICAgaWYgKCFpbnZva2VkQnlU
cmFkaW5nTmV0d29ya3MgfHwgcXVldWUuaXNFbmFibGVkKCkgfHwgcXVldWUuaXNEcmFpbmluZygp
KSB7CiAgICAgICAgY29tLndtLmFwcC50bi5kZWxpdmVyeS5HdWFyYW50ZWVkSm9iIHRhc2sgPSBj
b20ud20uYXBwLnRuLmRiLkRlbGl2ZXJ5U3RvcmUuZGVxdWV1ZU9sZGVzdEpvYihxdWV1ZS5nZXRR
dWV1ZU5hbWUoKSk7CiAgICAgICAgaWYgKHRhc2sgPT0gbnVsbCkgewogICAgICAgICAgYnJlYWs7
IC8vIGlmIHRoZXJlIGFyZSBubyBtb3JlIHRhc2tzLCB0aGVuIGV4aXQKICAgICAgICB9IGVsc2Ug
ewogICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgSURhdGEgb3V0cHV0ID0gY29tLndtLmFwcC5i
MmIuc2VydmVyLlNlcnZpY2UuZG9JbnZva2UoZXhlY3V0ZVRhc2tTZXJ2aWNlLCBjcmVhdGVUYXNr
SW5wdXRQaXBlbGluZSh0YXNrLCBzZXJ2aWNlLCBwaXBlbGluZSwgcXVldWUuZ2V0UXVldWVOYW1l
KCksIHF1ZXVlLmdldFF1ZXVlVHlwZSgpKSk7CiAgICAgICAgICB9IGNhdGNoIChFeGNlcHRpb24g
ZXgpIHt9CiAgICAgICAgICB0b3RhbCsrOwogICAgICAgIH0KICAgICAgICBpZiAoaW52b2tlZEJ5
VHJhZGluZ05ldHdvcmtzKSBxdWV1ZSA9IGNvbS53bS5hcHAudG4uZGIuUXVldWVPcGVyYXRpb25z
LnNlbGVjdEJ5TmFtZShxdWV1ZS5nZXRRdWV1ZU5hbWUoKSk7CiAgICAgIH0gZWxzZSB7CiAgICAg
ICAgYnJlYWs7IC8vIGlmIGludm9rZWQgYnkgVE4gYW5kIHF1ZXVlIGlzIGRpc2FibGVkIG9yIHN1
c3BlbmRlZCwgdGhlbiBleGl0CiAgICAgIH0KICAgIH0KICB9IGNhdGNoIChFeGNlcHRpb24gZXgp
IHsKICAgIHRocm93IG5ldyBTZXJ2aWNlRXhjZXB0aW9uKGV4LmdldENsYXNzKCkuZ2V0TmFtZSgp
ICsgIjogIiArIGV4LmdldE1lc3NhZ2UoKSk7CiAgfQp9CgovLyBkZXF1ZXVlcyBlYWNoIHRhc2sg
b24gdGhlIGdpdmVuIFROIHF1ZXVlLCBhbmQgcHJvY2Vzc2VzIHRoZSB0YXNrIHVzaW5nIHRoZSBn
aXZlbiBzZXJ2aWNlIGFuZCBpbnB1dCBwaXBlbGluZTsKLy8gdGFza3Mgd2lsbCBiZSBwcm9jZXNz
ZWQgYnkgYSB0aHJlYWQgcG9vbCB3aG9zZSBzaXplIGlzIGVxdWFsIHRvIHRoZSBkZXNpcmVkIGNv
bmN1cnJlbmN5CnByb3RlY3RlZCBzdGF0aWMgdm9pZCBlYWNoQ29uY3VycmVudChjb20ud20uYXBw
LnRuLmRlbGl2ZXJ5LkRlbGl2ZXJ5UXVldWUgcXVldWUsIGNvbS53bS5sYW5nLm5zLk5TTmFtZSBl
eGVjdXRlVGFza1NlcnZpY2UsIFN0cmluZyBzZXJ2aWNlLCBJRGF0YSBwaXBlbGluZSwgaW50IGNv
bmN1cnJlbmN5LCBpbnQgbGltaXQpIHRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsKICB0cnkgewog
ICAgYm9vbGVhbiBpbnZva2VkQnlUcmFkaW5nTmV0d29ya3MgPSBpbnZva2VkQnlUcmFkaW5nTmV0
d29ya3MoKTsKCiAgICAvLyB1cHBlciBib3VuZCBvbiBudW1iZXIgb2YgdGFza3Mgc3VibWl0dGVk
IHRvIHRocmVhZCBwb29sIGF0IGFueSBvbmUgdGltZQogICAgaW50IGJhY2tsb2cgPSBjb25jdXJy
ZW5jeSAqIDI7CiAgICBpbnQgdG90YWwgPSAwOwoKICAgIGNvbS53bS5hcHAuYjJiLnNlcnZlci5T
ZXNzaW9uIHNlc3Npb24gPSBjb20ud20uYXBwLmIyYi5zZXJ2ZXIuU2VydmljZS5nZXRTZXNzaW9u
KCk7CiAgICBjb20ud20uYXBwLmIyYi5zZXJ2ZXIuSW52b2tlU3RhdGUgc3RhdGUgPSBjb20ud20u
YXBwLmIyYi5zZXJ2ZXIuSW52b2tlU3RhdGUuZ2V0Q3VycmVudFN0YXRlKCk7CgogICAgamF2YS51
dGlsLmNvbmN1cnJlbnQuRXhlY3V0b3JTZXJ2aWNlIGV4ZWN1dG9yID0gamF2YS51dGlsLmNvbmN1
cnJlbnQuRXhlY3V0b3JzLm5ld0ZpeGVkVGhyZWFkUG9vbChjb25jdXJyZW5jeSwgbmV3IFNlcnZl
clRocmVhZEZhY3RvcnkocXVldWUuZ2V0UXVldWVOYW1lKCksIHN0YXRlKSk7CgogICAgamF2YS51
dGlsLlF1ZXVlPGphdmEudXRpbC5jb25jdXJyZW50LkZ1dHVyZTxJRGF0YT4+IGZ1dHVyZXMgPSBu
ZXcgamF2YS51dGlsLkxpbmtlZExpc3Q8amF2YS51dGlsLmNvbmN1cnJlbnQuRnV0dXJlPElEYXRh
Pj4oKTsKCiAgICB3aGlsZSh0b3RhbCA8IGxpbWl0KSB7CiAgICAgIGlmICghaW52b2tlZEJ5VHJh
ZGluZ05ldHdvcmtzIHx8IHF1ZXVlLmlzRW5hYmxlZCgpIHx8IHF1ZXVlLmlzRHJhaW5pbmcoKSkg
ewogICAgICAgIGludCBzaXplID0gZnV0dXJlcy5zaXplKCk7CiAgICAgICAgaWYgKHNpemUgPCBi
YWNrbG9nKSB7CiAgICAgICAgICAvLyBzdWJtaXQgYW5vdGhlciBxdWV1ZWQgdGFzawogICAgICAg
ICAgY29tLndtLmFwcC50bi5kZWxpdmVyeS5HdWFyYW50ZWVkSm9iIHRhc2sgPSBjb20ud20uYXBw
LnRuLmRiLkRlbGl2ZXJ5U3RvcmUuZGVxdWV1ZU9sZGVzdEpvYihxdWV1ZS5nZXRRdWV1ZU5hbWUo
KSk7CiAgICAgICAgICBpZiAodGFzayA9PSBudWxsKSB7CiAgICAgICAgICAgIGlmIChzaXplID4g
MCkgewogICAgICAgICAgICAgIC8vIHdhaXQgZm9yIGZpcnN0IHRocmVhZCB0byBmaW5pc2g7IG9u
Y2UgZmluaXNoZWQgd2UnbGwgbG9vcCBhZ2FpbiBhbmQgc2VlIGlmIHRoZXJlIGFyZSBub3cgdGFz
a3Mgb24gdGhlIHF1ZXVlCiAgICAgICAgICAgICAgYXdhaXRPbGRlc3QoZnV0dXJlcyk7CiAgICAg
ICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgLy8gaWYgYWxsIHRocmVhZHMgaGF2ZSBmaW5p
c2hlZCBhbmQgdGhlcmUgYXJlIG5vIG1vcmUgdGFza3MsIHRoZW4gZXhpdAogICAgICAgICAgICAg
IGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBmdXR1
cmVzLmFkZChleGVjdXRvci5zdWJtaXQobmV3IENhbGxhYmxlU2VydmljZShleGVjdXRlVGFza1Nl
cnZpY2UsIHNlc3Npb24sIGNyZWF0ZVRhc2tJbnB1dFBpcGVsaW5lKHRhc2ssIHNlcnZpY2UsIHBp
cGVsaW5lLCBxdWV1ZS5nZXRRdWV1ZU5hbWUoKSwgcXVldWUuZ2V0UXVldWVUeXBlKCkpKSkpOwog
ICAgICAgICAgICB0b3RhbCsrOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAg
ICAvLyB3YWl0IGZvciBmaXJzdCB0aHJlYWQgdG8gZmluaXNoCiAgICAgICAgICBhd2FpdE9sZGVz
dChmdXR1cmVzKTsKICAgICAgICB9CiAgICAgICAgaWYgKGludm9rZWRCeVRyYWRpbmdOZXR3b3Jr
cykgcXVldWUgPSBjb20ud20uYXBwLnRuLmRiLlF1ZXVlT3BlcmF0aW9ucy5zZWxlY3RCeU5hbWUo
cXVldWUuZ2V0UXVldWVOYW1lKCkpOwogICAgICB9IGVsc2UgewogICAgICAgIGJyZWFrOyAvLyBp
ZiBpbnZva2VkIGJ5IFROIGFuZCBxdWV1ZSBpcyBkaXNhYmxlZCBvciBzdXNwZW5kZWQsIHRoZW4g
ZXhpdAogICAgICB9CiAgICB9CiAgICBleGVjdXRvci5zaHV0ZG93bigpOwogICAgYXdhaXRBbGwo
ZnV0dXJlcyk7CiAgfSBjYXRjaCAoamF2YS5zcWwuU1FMRXhjZXB0aW9uIGV4KSB7CiAgICB0aHJv
dyBuZXcgU2VydmljZUV4Y2VwdGlvbihleC5nZXRDbGFzcygpLmdldE5hbWUoKSArICI6ICIgKyBl
eC5nZXRNZXNzYWdlKCkpOwogIH0gY2F0Y2ggKGphdmEuaW8uSU9FeGNlcHRpb24gZXgpIHsKICAg
IHRocm93IG5ldyBTZXJ2aWNlRXhjZXB0aW9uKGV4LmdldENsYXNzKCkuZ2V0TmFtZSgpICsgIjog
IiArIGV4LmdldE1lc3NhZ2UoKSk7CiAgfSBjYXRjaCAoY29tLndtLmFwcC50bi5kZWxpdmVyeS5E
ZWxpdmVyeUV4Y2VwdGlvbiBleCkgewogICAgdGhyb3cgbmV3IFNlcnZpY2VFeGNlcHRpb24oZXgu
Z2V0Q2xhc3MoKS5nZXROYW1lKCkgKyAiOiAiICsgZXguZ2V0TWVzc2FnZSgpKTsKICB9IGNhdGNo
IChqYXZhLmxhbmcuSW50ZXJydXB0ZWRFeGNlcHRpb24gZXgpIHsKICAgIHRocm93IG5ldyBTZXJ2
aWNlRXhjZXB0aW9uKGV4LmdldENsYXNzKCkuZ2V0TmFtZSgpICsgIjogIiArIGV4LmdldE1lc3Nh
Z2UoKSk7CiAgfQp9CgovLyB3YWl0cyBmb3IgYWxsIGZ1dHVyZXMgaW4gdGhlIGdpdmVuIHF1ZXVl
IHRvIGNvbXBsZXRlCnByb3RlY3RlZCBzdGF0aWMgPFQ+IHZvaWQgYXdhaXRBbGwoamF2YS51dGls
LlF1ZXVlPGphdmEudXRpbC5jb25jdXJyZW50LkZ1dHVyZTxUPj4gZnV0dXJlcykgdGhyb3dzIElu
dGVycnVwdGVkRXhjZXB0aW9uIHsKICB3aGlsZShmdXR1cmVzLnNpemUoKSA+IDApIHsKICAgIGF3
YWl0T2xkZXN0KGZ1dHVyZXMpOwogIH0KfQoKLy8gd2FpdHMgZm9yIHRoZSBmaXJzdC9oZWFkIGZ1
dHVyZSBpbiB0aGUgZ2l2ZW4gcXVldWUgdG8gY29tcGxldGUKcHJvdGVjdGVkIHN0YXRpYyA8VD4g
dm9pZCBhd2FpdE9sZGVzdChqYXZhLnV0aWwuUXVldWU8amF2YS51dGlsLmNvbmN1cnJlbnQuRnV0
dXJlPFQ+PiBmdXR1cmVzKSB0aHJvd3MgSW50ZXJydXB0ZWRFeGNlcHRpb24gewogIGF3YWl0KGZ1
dHVyZXMucG9sbCgpKTsKfQoKLy8gd2FpdHMgZm9yIHRoZSBnaXZlbiBmdXR1cmUgdG8gY29tcGxl
dGUKcHJvdGVjdGVkIHN0YXRpYyA8VD4gdm9pZCBhd2FpdChqYXZhLnV0aWwuY29uY3VycmVudC5G
dXR1cmU8VD4gZnV0dXJlKSB0aHJvd3MgSW50ZXJydXB0ZWRFeGNlcHRpb24gewogIHRyeSB7IGZ1
dHVyZS5nZXQoKTsgfSBjYXRjaCAoamF2YS51dGlsLmNvbmN1cnJlbnQuRXhlY3V0aW9uRXhjZXB0
aW9uIGV4KSB7fQp9CgovLyByZXR1cm5zIGEgbmV3IHBpcGVsaW5lIGZvciB0aGUgZXhlY3V0ZVRh
c2tTZXJ2aWNlCnByb3RlY3RlZCBzdGF0aWMgSURhdGEgY3JlYXRlVGFza0lucHV0UGlwZWxpbmUo
Y29tLndtLmFwcC50bi5kZWxpdmVyeS5HdWFyYW50ZWVkSm9iIHRhc2ssIFN0cmluZyBzZXJ2aWNl
LCBJRGF0YSBwaXBlbGluZSwgU3RyaW5nIHF1ZXVlTmFtZSwgU3RyaW5nIHF1ZXVlVHlwZSkgdGhy
b3dzIGphdmEuaW8uSU9FeGNlcHRpb24gewogIElEYXRhIG91dHB1dCA9IElEYXRhRmFjdG9yeS5j
cmVhdGUoKTsKICBJRGF0YUN1cnNvciBjdXJzb3IgPSBvdXRwdXQuZ2V0Q3Vyc29yKCk7CiAgSURh
dGFVdGlsLnB1dChjdXJzb3IsICJ0YXNrIiwgdGFzayk7CiAgSURhdGFVdGlsLnB1dChjdXJzb3Is
ICJ0aW1lRGVxdWV1ZWQiLCBTeXN0ZW0uY3VycmVudFRpbWVNaWxsaXMoKSk7CiAgSURhdGFVdGls
LnB1dChjdXJzb3IsICIkc2VydmljZSIsIHNlcnZpY2UpOwogIElEYXRhVXRpbC5wdXQoY3Vyc29y
LCAiJHBpcGVsaW5lIiwgSURhdGFVdGlsLmRlZXBDbG9uZShwaXBlbGluZSkpOwogIElEYXRhVXRp
bC5wdXQoY3Vyc29yLCAicXVldWUiLCBxdWV1ZU5hbWUpOwogIElEYXRhVXRpbC5wdXQoY3Vyc29y
LCAicXVldWUudHlwZSIsIHF1ZXVlVHlwZSk7CiAgY3Vyc29yLmRlc3Ryb3koKTsKCiAgcmV0dXJu
IG91dHB1dDsKfQoKLy8gcmV0dXJucyB0cnVlIGlmIHRoZSBpbnZvY2F0aW9uIGNhbGxzdGFjayBp
bmNsdWRlcyB0aGUgV21UTi93bS50bi5xdWV1aW5nOmRlbGl2ZXJCYXRjaCBzZXJ2aWNlCnByb3Rl
Y3RlZCBzdGF0aWMgYm9vbGVhbiBpbnZva2VkQnlUcmFkaW5nTmV0d29ya3MoKSB7CiAgamF2YS51
dGlsLkl0ZXJhdG9yIGl0ZXJhdG9yID0gY29tLndtLmFwcC5iMmIuc2VydmVyLkludm9rZVN0YXRl
LmdldEN1cnJlbnRTdGF0ZSgpLmdldENhbGxTdGFjaygpLml0ZXJhdG9yKCk7CiAgYm9vbGVhbiBy
ZXN1bHQgPSBmYWxzZTsKICB3aGlsZShpdGVyYXRvci5oYXNOZXh0KCkpIHsKICAgIHJlc3VsdCA9
IGl0ZXJhdG9yLm5leHQoKS50b1N0cmluZygpLmVxdWFscyhERUxJVkVSX0JBVENIX1NFUlZJQ0Vf
TkFNRSk7CiAgICBpZiAocmVzdWx0KSBicmVhazsKICB9CiAgcmV0dXJuIHJlc3VsdDsKfQoKLy8g
d3JhcHMgYSBjYWxsIHRvIGFuIElTIHNlcnZpY2Ugd2l0aCBhIHN0YW5kYXJkIGphdmEudXRpbC5j
b25jdXJyZW50LmNhbGxhYmxlIGludGVyZmFjZSwgc28gdGhhdCBpdCBjYW4KLy8gYmUgdXNlZCBi
eSBqYXZhLnV0aWwuY29uY3VycmVudCBleGVjdXRvcnMKcHVibGljIHN0YXRpYyBjbGFzcyBDYWxs
YWJsZVNlcnZpY2UgaW1wbGVtZW50cyBqYXZhLnV0aWwuY29uY3VycmVudC5DYWxsYWJsZTxJRGF0
YT4gewogIHByb3RlY3RlZCBjb20ud20ubGFuZy5ucy5OU05hbWUgc2VydmljZTsKICBwcm90ZWN0
ZWQgSURhdGEgaW5wdXQ7CiAgcHJvdGVjdGVkIGNvbS53bS5hcHAuYjJiLnNlcnZlci5TZXNzaW9u
IHNlc3Npb247CgogIHB1YmxpYyBDYWxsYWJsZVNlcnZpY2UoU3RyaW5nIHNlcnZpY2UsIGNvbS53
bS5hcHAuYjJiLnNlcnZlci5TZXNzaW9uIHNlc3Npb24sIElEYXRhIGlucHV0KSB7CiAgICB0aGlz
KGNvbS53bS5sYW5nLm5zLk5TTmFtZS5jcmVhdGUoc2VydmljZSksIHNlc3Npb24sIGlucHV0KTsK
ICB9CgogIHB1YmxpYyBDYWxsYWJsZVNlcnZpY2UoY29tLndtLmxhbmcubnMuTlNOYW1lIHNlcnZp
Y2UsIGNvbS53bS5hcHAuYjJiLnNlcnZlci5TZXNzaW9uIHNlc3Npb24sIElEYXRhIGlucHV0KSB7
CiAgICB0aGlzLnNlcnZpY2UgPSBzZXJ2aWNlOwogICAgdGhpcy5pbnB1dCA9IGlucHV0OwogICAg
dGhpcy5zZXNzaW9uID0gc2Vzc2lvbjsKICB9CgogIHB1YmxpYyBJRGF0YSBjYWxsKCkgdGhyb3dz
IEV4Y2VwdGlvbiB7CiAgICByZXR1cm4gY29tLndtLmFwcC5iMmIuc2VydmVyLlNlcnZpY2UuZG9J
bnZva2Uoc2VydmljZSwgc2Vzc2lvbiwgaW5wdXQpOwogIH0KfSAKCi8vIGEgdGhyZWFkIGZhY3Rv
cnkgd2hpY2ggY3JlYXRlcyBJUyB0aHJlYWRzIHdpdGggdGhlIGdpdmVuIGludm9rZSBzdGF0ZQpw
dWJsaWMgc3RhdGljIGNsYXNzIFNlcnZlclRocmVhZEZhY3RvcnkgaW1wbGVtZW50cyBqYXZhLnV0
aWwuY29uY3VycmVudC5UaHJlYWRGYWN0b3J5IHsKICBTdHJpbmcgcXVldWU7CiAgcHJvdGVjdGVk
IGNvbS53bS5hcHAuYjJiLnNlcnZlci5JbnZva2VTdGF0ZSBzdGF0ZTsKICBwcm90ZWN0ZWQgbG9u
ZyBjb3VudCA9IDE7CgogIHB1YmxpYyBTZXJ2ZXJUaHJlYWRGYWN0b3J5KFN0cmluZyBxdWV1ZSwg
Y29tLndtLmFwcC5iMmIuc2VydmVyLkludm9rZVN0YXRlIHN0YXRlKSB7CiAgICB0aGlzLnF1ZXVl
ID0gcXVldWU7CiAgICB0aGlzLnN0YXRlID0gc3RhdGU7CiAgfQoKICBwdWJsaWMgVGhyZWFkIG5l
d1RocmVhZChSdW5uYWJsZSByKSB7CiAgICBjb20ud20uYXBwLmIyYi5zZXJ2ZXIuU2VydmVyVGhy
ZWFkIHRocmVhZCA9IG5ldyBjb20ud20uYXBwLmIyYi5zZXJ2ZXIuU2VydmVyVGhyZWFkKHIpOwog
ICAgdGhyZWFkLnNldEludm9rZVN0YXRlKGNsb25lSW52b2tlU3RhdGVXaXRoU3RhY2soKSk7CiAg
ICB0aHJlYWQuc2V0TmFtZSgiVHVuZHJhVE4vUXVldWUgJyIgKyBxdWV1ZSArICInIFRocmVhZCMi
ICsgU3RyaW5nLmZvcm1hdCgiJTAzZCIsIGNvdW50KyspKTsKICAgIHJldHVybiB0aHJlYWQ7CiAg
fQoKICBwcm90ZWN0ZWQgY29tLndtLmFwcC5iMmIuc2VydmVyLkludm9rZVN0YXRlIGNsb25lSW52
b2tlU3RhdGVXaXRoU3RhY2soKSB7CiAgICBjb20ud20uYXBwLmIyYi5zZXJ2ZXIuSW52b2tlU3Rh
dGUgb3V0cHV0U3RhdGUgPSAoY29tLndtLmFwcC5iMmIuc2VydmVyLkludm9rZVN0YXRlKXN0YXRl
LmNsb25lKCk7CiAgICBqYXZhLnV0aWwuU3RhY2sgc3RhY2sgPSAoamF2YS51dGlsLlN0YWNrKXN0
YXRlLmdldENhbGxTdGFjaygpLmNsb25lKCk7CiAgICB3aGlsZSghc3RhY2suZW1wdHkoKSkgewog
ICAgICBjb20ud20ubGFuZy5ucy5OU1NlcnZpY2Ugc2VydmljZSA9IChjb20ud20ubGFuZy5ucy5O
U1NlcnZpY2Upc3RhY2sucmVtb3ZlKDApOwogICAgICBvdXRwdXRTdGF0ZS5wdXNoU2VydmljZShz
ZXJ2aWNlKTsKICAgIH0KICAgIHJldHVybiBvdXRwdXRTdGF0ZTsKICB9Cn0=</value>
  <value name="extends"></value>
  <array name="implements" type="value" depth="1">
  </array>
  <array name="imports" type="value" depth="1">
  </array>
</Values>
