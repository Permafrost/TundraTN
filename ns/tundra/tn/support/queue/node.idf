<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="encodeutf8">true</value>
  <value name="shared">cHJvdGVjdGVkIGZpbmFsIHN0YXRpYyBTdHJpbmcgRVhFQ1VURV9UQVNLX1NFUlZJQ0VfTkFNRSA9
ICJ0dW5kcmEudG4uc3VwcG9ydC5xdWV1ZS50YXNrOmV4ZWN1dGUiOwpwcm90ZWN0ZWQgZmluYWwg
c3RhdGljIGNvbS53bS5sYW5nLm5zLk5TTmFtZSBFWEVDVVRFX1RBU0tfU0VSVklDRSA9IGNvbS53
bS5sYW5nLm5zLk5TTmFtZS5jcmVhdGUoRVhFQ1VURV9UQVNLX1NFUlZJQ0VfTkFNRSk7CnByb3Rl
Y3RlZCBmaW5hbCBzdGF0aWMgU3RyaW5nIERFTElWRVJfQkFUQ0hfU0VSVklDRV9OQU1FID0gIndt
LnRuLnF1ZXVpbmc6ZGVsaXZlckJhdGNoIjsKcHJvdGVjdGVkIHN0YXRpYyBmaW5hbCBTdHJpbmcg
REVMSVZFUllfSk9CX1VQREFURV9TUUxfU1RBVEVNRU5UID0gImRlbGl2ZXIuam9iLnVwZGF0ZSI7
CgovLyBkZXF1ZXVlcyBlYWNoIHRhc2sgb24gdGhlIGdpdmVuIFROIHF1ZXVlLCBhbmQgcHJvY2Vz
c2VzIHRoZSB0YXNrIHVzaW5nIHRoZSBnaXZlbiBzZXJ2aWNlIGFuZCBpbnB1dCBwaXBlbGluZTsK
Ly8gaWYgY29uY3VycmVuY3kgPiAxLCB0YXNrcyB3aWxsIGJlIHByb2Nlc3NlZCBieSBhIHRocmVh
ZCBwb29sIHdob3NlIHNpemUgaXMgZXF1YWwgdG8gdGhlIGRlc2lyZWQgY29uY3VycmVuY3ksCi8v
IG90aGVyd2lzZSB0aGV5IHdpbGwgYmUgcHJvY2Vzc2VkIG9uIHRoZSBjdXJyZW50IHRocmVhZApw
dWJsaWMgc3RhdGljIHZvaWQgZWFjaChTdHJpbmcgcXVldWVOYW1lLCBTdHJpbmcgc2VydmljZSwg
SURhdGEgcGlwZWxpbmUsIGludCBjb25jdXJyZW5jeSwgaW50IGJhdGNoTGltaXQsIGludCByZXRy
eUxpbWl0LCBib29sZWFuIG9yZGVyZWQsIGJvb2xlYW4gc3VzcGVuZCwgU3RyaW5nIGV4aGF1c3Rl
ZFN0YXR1cykgdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24gewogIHRyeSB7CiAgICBpZiAoYmF0Y2hM
aW1pdCA8PSAwKSBiYXRjaExpbWl0ID0gSW50ZWdlci5NQVhfVkFMVUU7CgogICAgY29tLndtLmFw
cC50bi5kZWxpdmVyeS5EZWxpdmVyeVF1ZXVlIHF1ZXVlID0gY29tLndtLmFwcC50bi5kYi5RdWV1
ZU9wZXJhdGlvbnMuc2VsZWN0QnlOYW1lKHF1ZXVlTmFtZSk7CiAgICBpZiAocXVldWUgPT0gbnVs
bCkgdGhyb3cgbmV3IFNlcnZpY2VFeGNlcHRpb24oIlF1ZXVlICciICsgcXVldWVOYW1lICsgIicg
ZG9lcyBub3QgZXhpc3QiKTsKCiAgICBpZiAoY29uY3VycmVuY3kgPD0gMSB8fCBvcmRlcmVkKSB7
CiAgICAgIGVhY2hEaXJlY3QocXVldWUsIEVYRUNVVEVfVEFTS19TRVJWSUNFLCBzZXJ2aWNlLCBw
aXBlbGluZSwgYmF0Y2hMaW1pdCwgcmV0cnlMaW1pdCwgb3JkZXJlZCwgc3VzcGVuZCwgZXhoYXVz
dGVkU3RhdHVzKTsKICAgIH0gZWxzZSB7CiAgICAgIGVhY2hDb25jdXJyZW50KHF1ZXVlLCBFWEVD
VVRFX1RBU0tfU0VSVklDRSwgc2VydmljZSwgcGlwZWxpbmUsIGNvbmN1cnJlbmN5LCBiYXRjaExp
bWl0LCByZXRyeUxpbWl0KTsKICAgIH0KICB9IGNhdGNoIChqYXZhLnNxbC5TUUxFeGNlcHRpb24g
ZXgpIHsKICAgIHRocm93IG5ldyBTZXJ2aWNlRXhjZXB0aW9uKGV4LmdldENsYXNzKCkuZ2V0TmFt
ZSgpICsgIjogIiArIGV4LmdldE1lc3NhZ2UoKSk7CiAgfSBjYXRjaCAoamF2YS5pby5JT0V4Y2Vw
dGlvbiBleCkgewogICAgdGhyb3cgbmV3IFNlcnZpY2VFeGNlcHRpb24oZXguZ2V0Q2xhc3MoKS5n
ZXROYW1lKCkgKyAiOiAiICsgZXguZ2V0TWVzc2FnZSgpKTsKICB9Cn0KCi8vIGRlcXVldWVzIGVh
Y2ggdGFzayBvbiB0aGUgZ2l2ZW4gVE4gcXVldWUsIGFuZCBwcm9jZXNzZXMgdGhlIHRhc2sgdXNp
bmcgdGhlIGdpdmVuIHNlcnZpY2UgYW5kIGlucHV0IHBpcGVsaW5lCi8vIG9uIHRoZSBjdXJyZW50
IHRocmVhZApwcm90ZWN0ZWQgc3RhdGljIHZvaWQgZWFjaERpcmVjdChjb20ud20uYXBwLnRuLmRl
bGl2ZXJ5LkRlbGl2ZXJ5UXVldWUgcXVldWUsIGNvbS53bS5sYW5nLm5zLk5TTmFtZSBleGVjdXRl
VGFza1NlcnZpY2UsIFN0cmluZyBzZXJ2aWNlLCBJRGF0YSBwaXBlbGluZSwgaW50IGJhdGNoTGlt
aXQsIGludCByZXRyeUxpbWl0LCBib29sZWFuIG9yZGVyZWQsIGJvb2xlYW4gc3VzcGVuZCwgU3Ry
aW5nIGV4aGF1c3RlZFN0YXR1cykgdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24gewogIGJvb2xlYW4g
aW52b2tlZEJ5VHJhZGluZ05ldHdvcmtzID0gaW52b2tlZEJ5VHJhZGluZ05ldHdvcmtzKCk7CiAg
aW50IHRvdGFsID0gMDsKCiAgdHJ5IHsKICAgIHdoaWxlKHRvdGFsIDwgYmF0Y2hMaW1pdCkgewog
ICAgICBpZiAoIWludm9rZWRCeVRyYWRpbmdOZXR3b3JrcyB8fCBxdWV1ZS5pc0VuYWJsZWQoKSB8
fCBxdWV1ZS5pc0RyYWluaW5nKCkpIHsKICAgICAgICBjb20ud20uYXBwLnRuLmRlbGl2ZXJ5Lkd1
YXJhbnRlZWRKb2IgdGFzayA9IGNvbS53bS5hcHAudG4uZGIuRGVsaXZlcnlTdG9yZS5kZXF1ZXVl
T2xkZXN0Sm9iKHF1ZXVlLmdldFF1ZXVlTmFtZSgpKTsKICAgICAgICBpZiAodGFzayA9PSBudWxs
KSB7CiAgICAgICAgICBicmVhazsgLy8gaWYgdGhlcmUgYXJlIG5vIG1vcmUgdGFza3MsIHRoZW4g
ZXhpdAogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBJRGF0YSBvdXRwdXQgPSBjb20ud20uYXBw
LmIyYi5zZXJ2ZXIuU2VydmljZS5kb0ludm9rZShleGVjdXRlVGFza1NlcnZpY2UsIGNyZWF0ZVRh
c2tJbnB1dFBpcGVsaW5lKHRhc2ssIHNlcnZpY2UsIHBpcGVsaW5lLCBxdWV1ZS5nZXRRdWV1ZU5h
bWUoKSwgcXVldWUuZ2V0UXVldWVUeXBlKCkpKTsKICAgICAgICAgIHRvdGFsKys7CgogICAgICAg
ICAgaWYgKHJldHJ5KHRhc2ssIHJldHJ5TGltaXQsIG9yZGVyZWQsIHN1c3BlbmQsIGV4aGF1c3Rl
ZFN0YXR1cykgJiYgb3JkZXJlZCkgeyAKICAgICAgICAgICAgYnJlYWs7IC8vIGlmIHRoZSB0YXNr
IG5lZWRzIHRvIGJlIHJldHJpZWQgYW5kIHRoZSBxdWV1ZSBpcyBiZWluZyBwcm9jZXNzZWQgaW4t
b3JkZXIsIGV4aXQgc28gYXMgbm90IHRvIHJldHJ5IHRoZSBzYW1lIHRhc2sgaW1tZWRpYXRlbHkK
ICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgaWYgKGludm9rZWRCeVRyYWRpbmdOZXR3b3Jr
cykgcXVldWUgPSBjb20ud20uYXBwLnRuLmRiLlF1ZXVlT3BlcmF0aW9ucy5zZWxlY3RCeU5hbWUo
cXVldWUuZ2V0UXVldWVOYW1lKCkpOwogICAgICB9IGVsc2UgewogICAgICAgIGJyZWFrOyAvLyBp
ZiBpbnZva2VkIGJ5IFROIGFuZCBxdWV1ZSBpcyBkaXNhYmxlZCBvciBzdXNwZW5kZWQsIHRoZW4g
ZXhpdAogICAgICB9CiAgICB9CiAgfSBjYXRjaCAoRXhjZXB0aW9uIGV4KSB7CiAgICBpZiAoZXgg
aW5zdGFuY2VvZiBTZXJ2aWNlRXhjZXB0aW9uKSB7CiAgICAgIHRocm93IChTZXJ2aWNlRXhjZXB0
aW9uKWV4OwogICAgfSBlbHNlIHsKICAgICAgdGhyb3cgbmV3IFNlcnZpY2VFeGNlcHRpb24oZXgu
Z2V0Q2xhc3MoKS5nZXROYW1lKCkgKyAiOiAiICsgZXguZ2V0TWVzc2FnZSgpKTsKICAgIH0KICB9
Cn0KCi8vIGRlcXVldWVzIGVhY2ggdGFzayBvbiB0aGUgZ2l2ZW4gVE4gcXVldWUsIGFuZCBwcm9j
ZXNzZXMgdGhlIHRhc2sgdXNpbmcgdGhlIGdpdmVuIHNlcnZpY2UgYW5kIGlucHV0IHBpcGVsaW5l
OwovLyB0YXNrcyB3aWxsIGJlIHByb2Nlc3NlZCBieSBhIHRocmVhZCBwb29sIHdob3NlIHNpemUg
aXMgZXF1YWwgdG8gdGhlIGRlc2lyZWQgY29uY3VycmVuY3kKcHJvdGVjdGVkIHN0YXRpYyB2b2lk
IGVhY2hDb25jdXJyZW50KGNvbS53bS5hcHAudG4uZGVsaXZlcnkuRGVsaXZlcnlRdWV1ZSBxdWV1
ZSwgY29tLndtLmxhbmcubnMuTlNOYW1lIGV4ZWN1dGVUYXNrU2VydmljZSwgU3RyaW5nIHNlcnZp
Y2UsIElEYXRhIHBpcGVsaW5lLCBpbnQgY29uY3VycmVuY3ksIGludCBiYXRjaExpbWl0LCBpbnQg
cmV0cnlMaW1pdCkgdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24gewogIGJvb2xlYW4gaW52b2tlZEJ5
VHJhZGluZ05ldHdvcmtzID0gaW52b2tlZEJ5VHJhZGluZ05ldHdvcmtzKCk7CgogIC8vIHVwcGVy
IGJvdW5kIG9uIG51bWJlciBvZiB0YXNrcyBzdWJtaXR0ZWQgdG8gdGhyZWFkIHBvb2wgYXQgYW55
IG9uZSB0aW1lCiAgaW50IGJhY2tsb2cgPSBjb25jdXJyZW5jeSAqIDI7CiAgaW50IHRvdGFsID0g
MDsKCiAgY29tLndtLmFwcC5iMmIuc2VydmVyLlNlc3Npb24gc2Vzc2lvbiA9IGNvbS53bS5hcHAu
YjJiLnNlcnZlci5TZXJ2aWNlLmdldFNlc3Npb24oKTsKICBjb20ud20uYXBwLmIyYi5zZXJ2ZXIu
SW52b2tlU3RhdGUgc3RhdGUgPSBjb20ud20uYXBwLmIyYi5zZXJ2ZXIuSW52b2tlU3RhdGUuZ2V0
Q3VycmVudFN0YXRlKCk7CiAgamF2YS51dGlsLmNvbmN1cnJlbnQuRXhlY3V0b3JTZXJ2aWNlIGV4
ZWN1dG9yID0gamF2YS51dGlsLmNvbmN1cnJlbnQuRXhlY3V0b3JzLm5ld0ZpeGVkVGhyZWFkUG9v
bChjb25jdXJyZW5jeSwgbmV3IFNlcnZlclRocmVhZEZhY3RvcnkocXVldWUuZ2V0UXVldWVOYW1l
KCksIHN0YXRlKSk7CiAgamF2YS51dGlsLlF1ZXVlPGphdmEudXRpbC5jb25jdXJyZW50LkZ1dHVy
ZTxJRGF0YT4+IGZ1dHVyZXMgPSBuZXcgamF2YS51dGlsLkxpbmtlZExpc3Q8amF2YS51dGlsLmNv
bmN1cnJlbnQuRnV0dXJlPElEYXRhPj4oKTsKCiAgdHJ5IHsKICAgIHdoaWxlKHRvdGFsIDwgYmF0
Y2hMaW1pdCkgewogICAgICBpZiAoIWludm9rZWRCeVRyYWRpbmdOZXR3b3JrcyB8fCBxdWV1ZS5p
c0VuYWJsZWQoKSB8fCBxdWV1ZS5pc0RyYWluaW5nKCkpIHsKICAgICAgICBpbnQgc2l6ZSA9IGZ1
dHVyZXMuc2l6ZSgpOwogICAgICAgIGlmIChzaXplIDwgYmFja2xvZykgewogICAgICAgICAgLy8g
c3VibWl0IGFub3RoZXIgcXVldWVkIHRhc2sKICAgICAgICAgIGNvbS53bS5hcHAudG4uZGVsaXZl
cnkuR3VhcmFudGVlZEpvYiB0YXNrID0gY29tLndtLmFwcC50bi5kYi5EZWxpdmVyeVN0b3JlLmRl
cXVldWVPbGRlc3RKb2IocXVldWUuZ2V0UXVldWVOYW1lKCkpOwogICAgICAgICAgaWYgKHRhc2sg
PT0gbnVsbCkgewogICAgICAgICAgICBpZiAoc2l6ZSA+IDApIHsKICAgICAgICAgICAgICAvLyB3
YWl0IGZvciBmaXJzdCB0aHJlYWQgdG8gZmluaXNoOyBvbmNlIGZpbmlzaGVkIHdlJ2xsIGxvb3Ag
YWdhaW4gYW5kIHNlZSBpZiB0aGVyZSBhcmUgbm93IHRhc2tzIG9uIHRoZSBxdWV1ZQogICAgICAg
ICAgICAgIGF3YWl0T2xkZXN0KGZ1dHVyZXMsIHJldHJ5TGltaXQpOwogICAgICAgICAgICB9IGVs
c2UgewogICAgICAgICAgICAgIC8vIGlmIGFsbCB0aHJlYWRzIGhhdmUgZmluaXNoZWQgYW5kIHRo
ZXJlIGFyZSBubyBtb3JlIHRhc2tzLCB0aGVuIGV4aXQKICAgICAgICAgICAgICBicmVhazsKICAg
ICAgICAgICAgfQogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgZnV0dXJlcy5hZGQoZXhl
Y3V0b3Iuc3VibWl0KG5ldyBDYWxsYWJsZVNlcnZpY2UoZXhlY3V0ZVRhc2tTZXJ2aWNlLCBzZXNz
aW9uLCBjcmVhdGVUYXNrSW5wdXRQaXBlbGluZSh0YXNrLCBzZXJ2aWNlLCBwaXBlbGluZSwgcXVl
dWUuZ2V0UXVldWVOYW1lKCksIHF1ZXVlLmdldFF1ZXVlVHlwZSgpKSkpKTsKICAgICAgICAgICAg
dG90YWwrKzsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgLy8gd2FpdCBm
b3IgZmlyc3QgdGhyZWFkIHRvIGZpbmlzaAogICAgICAgICAgYXdhaXRPbGRlc3QoZnV0dXJlcywg
cmV0cnlMaW1pdCk7CiAgICAgICAgfQogICAgICAgIGlmIChpbnZva2VkQnlUcmFkaW5nTmV0d29y
a3MpIHF1ZXVlID0gY29tLndtLmFwcC50bi5kYi5RdWV1ZU9wZXJhdGlvbnMuc2VsZWN0QnlOYW1l
KHF1ZXVlLmdldFF1ZXVlTmFtZSgpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBicmVhazsgLy8g
aWYgaW52b2tlZCBieSBUTiBhbmQgcXVldWUgaXMgZGlzYWJsZWQgb3Igc3VzcGVuZGVkLCB0aGVu
IGV4aXQKICAgICAgfQogICAgfQogIH0gY2F0Y2ggKGphdmEuc3FsLlNRTEV4Y2VwdGlvbiBleCkg
ewogICAgdGhyb3cgbmV3IFNlcnZpY2VFeGNlcHRpb24oZXguZ2V0Q2xhc3MoKS5nZXROYW1lKCkg
KyAiOiAiICsgZXguZ2V0TWVzc2FnZSgpKTsKICB9IGNhdGNoIChqYXZhLmlvLklPRXhjZXB0aW9u
IGV4KSB7CiAgICB0aHJvdyBuZXcgU2VydmljZUV4Y2VwdGlvbihleC5nZXRDbGFzcygpLmdldE5h
bWUoKSArICI6ICIgKyBleC5nZXRNZXNzYWdlKCkpOwogIH0gY2F0Y2ggKGNvbS53bS5hcHAudG4u
ZGVsaXZlcnkuRGVsaXZlcnlFeGNlcHRpb24gZXgpIHsKICAgIHRocm93IG5ldyBTZXJ2aWNlRXhj
ZXB0aW9uKGV4LmdldENsYXNzKCkuZ2V0TmFtZSgpICsgIjogIiArIGV4LmdldE1lc3NhZ2UoKSk7
CiAgfSBmaW5hbGx5IHsKICAgIGV4ZWN1dG9yLnNodXRkb3duKCk7CiAgICBhd2FpdEFsbChmdXR1
cmVzLCByZXRyeUxpbWl0KTsKICB9Cn0KCi8vIHdhaXRzIGZvciBhbGwgZnV0dXJlcyBpbiB0aGUg
Z2l2ZW4gcXVldWUgdG8gY29tcGxldGUKcHJvdGVjdGVkIHN0YXRpYyBqYXZhLnV0aWwuTGlzdDxJ
RGF0YT4gYXdhaXRBbGwoamF2YS51dGlsLlF1ZXVlPGphdmEudXRpbC5jb25jdXJyZW50LkZ1dHVy
ZTxJRGF0YT4+IGZ1dHVyZXMsIGludCByZXRyeUxpbWl0KSB7CiAgamF2YS51dGlsLkxpc3Q8SURh
dGE+IHJlc3VsdHMgPSBuZXcgamF2YS51dGlsLkFycmF5TGlzdDxJRGF0YT4oZnV0dXJlcy5zaXpl
KCkpOwogIHdoaWxlKGZ1dHVyZXMuc2l6ZSgpID4gMCkgewogICAgdHJ5IHsKICAgICAgcmVzdWx0
cy5hZGQoYXdhaXRPbGRlc3QoZnV0dXJlcywgcmV0cnlMaW1pdCkpOwogICAgfSBjYXRjaCAoRXhj
ZXB0aW9uIGV4KSB7CiAgICAgIC8vIGlnbm9yZSBleGNlcHRpb25zCiAgICB9CiAgfQogIHJldHVy
biByZXN1bHRzOwp9CgovLyB3YWl0cyBmb3IgdGhlIGZpcnN0L2hlYWQgZnV0dXJlIGluIHRoZSBn
aXZlbiBxdWV1ZSB0byBjb21wbGV0ZQpwcm90ZWN0ZWQgc3RhdGljIElEYXRhIGF3YWl0T2xkZXN0
KGphdmEudXRpbC5RdWV1ZTxqYXZhLnV0aWwuY29uY3VycmVudC5GdXR1cmU8SURhdGE+PiBmdXR1
cmVzLCBpbnQgcmV0cnlMaW1pdCkgdGhyb3dzIGphdmEuc3FsLlNRTEV4Y2VwdGlvbiwgamF2YS5p
by5JT0V4Y2VwdGlvbiwgU2VydmljZUV4Y2VwdGlvbiB7CiAgcmV0dXJuIGF3YWl0KGZ1dHVyZXMu
cG9sbCgpLCByZXRyeUxpbWl0KTsKfQoKLy8gd2FpdHMgZm9yIHRoZSBnaXZlbiBmdXR1cmUgdG8g
Y29tcGxldGUKcHJvdGVjdGVkIHN0YXRpYyBJRGF0YSBhd2FpdChqYXZhLnV0aWwuY29uY3VycmVu
dC5GdXR1cmU8SURhdGE+IGZ1dHVyZSwgaW50IHJldHJ5TGltaXQpIHRocm93cyBqYXZhLnNxbC5T
UUxFeGNlcHRpb24sIGphdmEuaW8uSU9FeGNlcHRpb24sIFNlcnZpY2VFeGNlcHRpb24gewogIElE
YXRhIG91dHB1dCA9IG51bGw7CiAgdHJ5IHsKICAgIG91dHB1dCA9IGZ1dHVyZS5nZXQoKTsKCiAg
ICBpZiAob3V0cHV0ICE9IG51bGwpIHsKICAgICAgSURhdGFDdXJzb3IgY3Vyc29yID0gb3V0cHV0
LmdldEN1cnNvcigpOwogICAgICBPYmplY3QgdGFzayA9IElEYXRhVXRpbC5nZXQoY3Vyc29yLCAi
dGFzayIpOwogICAgICBjdXJzb3IuZGVzdHJveSgpOwoKICAgICAgaWYgKHRhc2sgIT0gbnVsbCAm
JiB0YXNrIGluc3RhbmNlb2YgY29tLndtLmFwcC50bi5kZWxpdmVyeS5HdWFyYW50ZWVkSm9iKSBy
ZXRyeSgoY29tLndtLmFwcC50bi5kZWxpdmVyeS5HdWFyYW50ZWVkSm9iKXRhc2ssIHJldHJ5TGlt
aXQpOwogICAgfQogIH0gY2F0Y2ggKGphdmEudXRpbC5jb25jdXJyZW50LkV4ZWN1dGlvbkV4Y2Vw
dGlvbiBleCkgewogICAgLy8gaWdub3JlIGV4Y2VwdGlvbnMKICB9IGNhdGNoKEludGVycnVwdGVk
RXhjZXB0aW9uIGV4KSB7CiAgICAvLyBpZ25vcmUgZXhjZXB0aW9ucwogIH0KICByZXR1cm4gb3V0
cHV0Owp9CgovLyByZXR1cm5zIGEgbmV3IHBpcGVsaW5lIGZvciB0aGUgZXhlY3V0ZVRhc2tTZXJ2
aWNlCnByb3RlY3RlZCBzdGF0aWMgSURhdGEgY3JlYXRlVGFza0lucHV0UGlwZWxpbmUoY29tLndt
LmFwcC50bi5kZWxpdmVyeS5HdWFyYW50ZWVkSm9iIHRhc2ssIFN0cmluZyBzZXJ2aWNlLCBJRGF0
YSBwaXBlbGluZSwgU3RyaW5nIHF1ZXVlTmFtZSwgU3RyaW5nIHF1ZXVlVHlwZSkgdGhyb3dzIGph
dmEuaW8uSU9FeGNlcHRpb24gewogIElEYXRhIG91dHB1dCA9IElEYXRhRmFjdG9yeS5jcmVhdGUo
KTsKICBJRGF0YUN1cnNvciBjdXJzb3IgPSBvdXRwdXQuZ2V0Q3Vyc29yKCk7CiAgSURhdGFVdGls
LnB1dChjdXJzb3IsICJ0YXNrIiwgdGFzayk7CiAgSURhdGFVdGlsLnB1dChjdXJzb3IsICJ0aW1l
RGVxdWV1ZWQiLCBTeXN0ZW0uY3VycmVudFRpbWVNaWxsaXMoKSk7CiAgSURhdGFVdGlsLnB1dChj
dXJzb3IsICIkc2VydmljZSIsIHNlcnZpY2UpOwogIElEYXRhVXRpbC5wdXQoY3Vyc29yLCAiJHBp
cGVsaW5lIiwgSURhdGFVdGlsLmRlZXBDbG9uZShwaXBlbGluZSkpOwogIElEYXRhVXRpbC5wdXQo
Y3Vyc29yLCAicXVldWUiLCBxdWV1ZU5hbWUpOwogIElEYXRhVXRpbC5wdXQoY3Vyc29yLCAicXVl
dWUudHlwZSIsIHF1ZXVlVHlwZSk7CiAgY3Vyc29yLmRlc3Ryb3koKTsKCiAgcmV0dXJuIG91dHB1
dDsKfQoKLy8gcmV0dXJucyB0cnVlIGlmIHRoZSBpbnZvY2F0aW9uIGNhbGxzdGFjayBpbmNsdWRl
cyB0aGUgV21UTi93bS50bi5xdWV1aW5nOmRlbGl2ZXJCYXRjaCBzZXJ2aWNlCnByb3RlY3RlZCBz
dGF0aWMgYm9vbGVhbiBpbnZva2VkQnlUcmFkaW5nTmV0d29ya3MoKSB7CiAgamF2YS51dGlsLkl0
ZXJhdG9yIGl0ZXJhdG9yID0gY29tLndtLmFwcC5iMmIuc2VydmVyLkludm9rZVN0YXRlLmdldEN1
cnJlbnRTdGF0ZSgpLmdldENhbGxTdGFjaygpLml0ZXJhdG9yKCk7CiAgYm9vbGVhbiByZXN1bHQg
PSBmYWxzZTsKICB3aGlsZShpdGVyYXRvci5oYXNOZXh0KCkpIHsKICAgIHJlc3VsdCA9IGl0ZXJh
dG9yLm5leHQoKS50b1N0cmluZygpLmVxdWFscyhERUxJVkVSX0JBVENIX1NFUlZJQ0VfTkFNRSk7
CiAgICBpZiAocmVzdWx0KSBicmVhazsKICB9CiAgcmV0dXJuIHJlc3VsdDsKfQoKLy8gd3JhcHMg
YSBjYWxsIHRvIGFuIElTIHNlcnZpY2Ugd2l0aCBhIHN0YW5kYXJkIGphdmEudXRpbC5jb25jdXJy
ZW50LmNhbGxhYmxlIGludGVyZmFjZSwgc28gdGhhdCBpdCBjYW4KLy8gYmUgdXNlZCBieSBqYXZh
LnV0aWwuY29uY3VycmVudCBleGVjdXRvcnMKcHVibGljIHN0YXRpYyBjbGFzcyBDYWxsYWJsZVNl
cnZpY2UgaW1wbGVtZW50cyBqYXZhLnV0aWwuY29uY3VycmVudC5DYWxsYWJsZTxJRGF0YT4gewog
IHByb3RlY3RlZCBjb20ud20ubGFuZy5ucy5OU05hbWUgc2VydmljZTsKICBwcm90ZWN0ZWQgSURh
dGEgaW5wdXQ7CiAgcHJvdGVjdGVkIGNvbS53bS5hcHAuYjJiLnNlcnZlci5TZXNzaW9uIHNlc3Np
b247CgogIHB1YmxpYyBDYWxsYWJsZVNlcnZpY2UoU3RyaW5nIHNlcnZpY2UsIGNvbS53bS5hcHAu
YjJiLnNlcnZlci5TZXNzaW9uIHNlc3Npb24sIElEYXRhIGlucHV0KSB7CiAgICB0aGlzKGNvbS53
bS5sYW5nLm5zLk5TTmFtZS5jcmVhdGUoc2VydmljZSksIHNlc3Npb24sIGlucHV0KTsKICB9Cgog
IHB1YmxpYyBDYWxsYWJsZVNlcnZpY2UoY29tLndtLmxhbmcubnMuTlNOYW1lIHNlcnZpY2UsIGNv
bS53bS5hcHAuYjJiLnNlcnZlci5TZXNzaW9uIHNlc3Npb24sIElEYXRhIGlucHV0KSB7CiAgICB0
aGlzLnNlcnZpY2UgPSBzZXJ2aWNlOwogICAgdGhpcy5pbnB1dCA9IGlucHV0OwogICAgdGhpcy5z
ZXNzaW9uID0gc2Vzc2lvbjsKICB9CgogIHB1YmxpYyBJRGF0YSBjYWxsKCkgdGhyb3dzIEV4Y2Vw
dGlvbiB7CiAgICByZXR1cm4gY29tLndtLmFwcC5iMmIuc2VydmVyLlNlcnZpY2UuZG9JbnZva2Uo
c2VydmljZSwgc2Vzc2lvbiwgaW5wdXQpOwogIH0KfSAKCi8vIGEgdGhyZWFkIGZhY3Rvcnkgd2hp
Y2ggY3JlYXRlcyBJUyB0aHJlYWRzIHdpdGggdGhlIGdpdmVuIGludm9rZSBzdGF0ZQpwdWJsaWMg
c3RhdGljIGNsYXNzIFNlcnZlclRocmVhZEZhY3RvcnkgaW1wbGVtZW50cyBqYXZhLnV0aWwuY29u
Y3VycmVudC5UaHJlYWRGYWN0b3J5IHsKICBTdHJpbmcgcXVldWU7CiAgcHJvdGVjdGVkIGNvbS53
bS5hcHAuYjJiLnNlcnZlci5JbnZva2VTdGF0ZSBzdGF0ZTsKICBwcm90ZWN0ZWQgbG9uZyBjb3Vu
dCA9IDE7CgogIHB1YmxpYyBTZXJ2ZXJUaHJlYWRGYWN0b3J5KFN0cmluZyBxdWV1ZSwgY29tLndt
LmFwcC5iMmIuc2VydmVyLkludm9rZVN0YXRlIHN0YXRlKSB7CiAgICB0aGlzLnF1ZXVlID0gcXVl
dWU7CiAgICB0aGlzLnN0YXRlID0gc3RhdGU7CiAgfQoKICBwdWJsaWMgVGhyZWFkIG5ld1RocmVh
ZChSdW5uYWJsZSByKSB7CiAgICBjb20ud20uYXBwLmIyYi5zZXJ2ZXIuU2VydmVyVGhyZWFkIHRo
cmVhZCA9IG5ldyBjb20ud20uYXBwLmIyYi5zZXJ2ZXIuU2VydmVyVGhyZWFkKHIpOwogICAgdGhy
ZWFkLnNldEludm9rZVN0YXRlKGNsb25lSW52b2tlU3RhdGVXaXRoU3RhY2soKSk7CiAgICB0aHJl
YWQuc2V0TmFtZSgiVHVuZHJhVE4vUXVldWUgJyIgKyBxdWV1ZSArICInIFRocmVhZCMiICsgU3Ry
aW5nLmZvcm1hdCgiJTAzZCIsIGNvdW50KyspKTsKICAgIHJldHVybiB0aHJlYWQ7CiAgfQoKICBw
cm90ZWN0ZWQgY29tLndtLmFwcC5iMmIuc2VydmVyLkludm9rZVN0YXRlIGNsb25lSW52b2tlU3Rh
dGVXaXRoU3RhY2soKSB7CiAgICBjb20ud20uYXBwLmIyYi5zZXJ2ZXIuSW52b2tlU3RhdGUgb3V0
cHV0U3RhdGUgPSAoY29tLndtLmFwcC5iMmIuc2VydmVyLkludm9rZVN0YXRlKXN0YXRlLmNsb25l
KCk7CiAgICBqYXZhLnV0aWwuU3RhY2sgc3RhY2sgPSAoamF2YS51dGlsLlN0YWNrKXN0YXRlLmdl
dENhbGxTdGFjaygpLmNsb25lKCk7CiAgICB3aGlsZSghc3RhY2suZW1wdHkoKSkgewogICAgICBj
b20ud20ubGFuZy5ucy5OU1NlcnZpY2Ugc2VydmljZSA9IChjb20ud20ubGFuZy5ucy5OU1NlcnZp
Y2Upc3RhY2sucmVtb3ZlKDApOwogICAgICBvdXRwdXRTdGF0ZS5wdXNoU2VydmljZShzZXJ2aWNl
KTsKICAgIH0KICAgIHJldHVybiBvdXRwdXRTdGF0ZTsKICB9Cn0KCi8vIHJlLWVucXVldWVzIHRo
ZSBnaXZlbiBqb2IgZm9yIGRlbGl2ZXJ5LCB1bmxlc3MgaXQgaGFzIHJlYWNoZWQgaXRzIHJldHJ5
IGxpbWl0CnByb3RlY3RlZCBzdGF0aWMgYm9vbGVhbiByZXRyeShjb20ud20uYXBwLnRuLmRlbGl2
ZXJ5Lkd1YXJhbnRlZWRKb2Igam9iLCBpbnQgcmV0cnlMaW1pdCkgdGhyb3dzIGphdmEuc3FsLlNR
TEV4Y2VwdGlvbiwgamF2YS5pby5JT0V4Y2VwdGlvbiwgU2VydmljZUV4Y2VwdGlvbiB7CiAgcmV0
dXJuIHJldHJ5KGpvYiwgcmV0cnlMaW1pdCwgZmFsc2UsIGZhbHNlLCBudWxsKTsKfQoKcHJvdGVj
dGVkIGZpbmFsIHN0YXRpYyBTdHJpbmcgREVGQVVMVF9FWEhBVVNURURfU1RBVFVTID0gIkVYSEFV
U1RFRCI7CgovLyByZS1lbnF1ZXVlcyB0aGUgZ2l2ZW4gam9iIGZvciBkZWxpdmVyeSwgdW5sZXNz
IGl0IGhhcyByZWFjaGVkIGl0cyByZXRyeSBsaW1pdApwcm90ZWN0ZWQgc3RhdGljIGJvb2xlYW4g
cmV0cnkoY29tLndtLmFwcC50bi5kZWxpdmVyeS5HdWFyYW50ZWVkSm9iIGpvYiwgaW50IHJldHJ5
TGltaXQsIGJvb2xlYW4gb3JkZXJlZCwgYm9vbGVhbiBzdXNwZW5kLCBTdHJpbmcgZXhoYXVzdGVk
U3RhdHVzKSB0aHJvd3MgamF2YS5zcWwuU1FMRXhjZXB0aW9uLCBqYXZhLmlvLklPRXhjZXB0aW9u
LCBTZXJ2aWNlRXhjZXB0aW9uIHsKICBpZiAoZXhoYXVzdGVkU3RhdHVzID09IG51bGwpIGV4aGF1
c3RlZFN0YXR1cyA9IERFRkFVTFRfRVhIQVVTVEVEX1NUQVRVUzsKICBqb2IgPSBjb20ud20uYXBw
LnRuLmRiLkRlbGl2ZXJ5U3RvcmUuZ2V0QW55Sm9iKGpvYi5nZXRKb2JJZCgpLCB0cnVlKTsgLy8g
cmVmZXRjaCBqb2IgZnJvbSBEQgogIGNvbS53bS5hcHAudG4uZG9jLkJpekRvY0VudmVsb3BlIGJp
emRvYyA9IGpvYi5nZXRCaXpEb2NFbnZlbG9wZSgpOwoKICBpbnQgam9iTGltaXQgPSBqb2IuZ2V0
UmV0cnlMaW1pdCgpOwogIGludCByZXRyaWVzID0gam9iLmdldFJldHJpZXMoKTsKICBTdHJpbmcg
c3RhdHVzID0gam9iLmdldFN0YXR1cygpOwogIFN0cmluZyBxdWV1ZU5hbWUgPSBqb2IuZ2V0UXVl
dWVOYW1lKCk7CiAgY29tLndtLmFwcC50bi5kZWxpdmVyeS5EZWxpdmVyeVF1ZXVlIHF1ZXVlID0g
dHVuZHJhLnRuLnF1ZXVlLmdldChxdWV1ZU5hbWUpOwoKICBib29sZWFuIGF1dG9tYXRpY1JldHJ5
ID0gam9iTGltaXQgPiAwOwogIGlmIChhdXRvbWF0aWNSZXRyeSkgcmV0cnlMaW1pdCA9IGpvYkxp
bWl0OyAvLyBob25vdXIgdGhlIHJldHJ5IHNldHRpbmdzIG9uIHRoZSB0YXNrCiAgYm9vbGVhbiBl
eGhhdXN0ZWQgPSByZXRyaWVzID49IHJldHJ5TGltaXQ7CgogIGJvb2xlYW4gZmFpbGVkID0gKGpv
YkxpbWl0ID4gMCAmJiByZXRyaWVzID4gMCAmJiBzdGF0dXMuZXF1YWxzKCJRVUVVRUQiKSkgfHwg
KChqb2JMaW1pdCA8PSAwIHx8IGV4aGF1c3RlZCkgJiYgc3RhdHVzLmVxdWFscygiRkFJTEVEIikp
OwoKICBib29sZWFuIGJyZWFrTG9vcCA9IGZhbHNlOwoKICBpZiAoZmFpbGVkKSB7CiAgICBpZiAo
ZXhoYXVzdGVkKSB7CiAgICAgIGlmIChvcmRlcmVkICYmIHN1c3BlbmQpIHsKICAgICAgICAvLyBy
ZXNldCByZXRyaWVzIGJhY2sgdG8gMAogICAgICAgIGpvYi5zZXRSZXRyaWVzKDApOwogICAgICAg
IGpvYi5zZXRTdGF0dXMoY29tLndtLmFwcC50bi5kZWxpdmVyeS5HdWFyYW50ZWVkSm9iLlFVRVVF
RCk7CiAgICAgICAgam9iLnNldERlZmF1bHRTZXJ2ZXJJZCgpOwogICAgICAgIGpvYi5zZXRUaW1l
VXBkYXRlZChqb2IuZ2V0VGltZUNyZWF0ZWQoKSk7IC8vIGZvcmNlIHRoaXMgam9iIHRvIHRoZSBm
cm9udCBvZiB0aGUgcXVldWUKICAgICAgICB1cGRhdGUoam9iKTsKCiAgICAgICAgLy8gc3VzcGVu
ZCB0aGUgcXVldWUKICAgICAgICB0dW5kcmEudG4ucXVldWUuc3VzcGVuZChxdWV1ZU5hbWUpOwoK
ICAgICAgICBpZiAoYml6ZG9jICE9IG51bGwpIHsKICAgICAgICAgIGNvbS53bS5hcHAudG4uZGIu
Qml6RG9jU3RvcmUuY2hhbmdlU3RhdHVzKGJpemRvYywgIlFVRVVFRCIsICJTVVNQRU5ERUQiKTsK
ICAgICAgICAgIGlmIChxdWV1ZS5nZXRRdWV1ZVR5cGUoKS5lcXVhbHMoInByaXZhdGUiKSkgewog
ICAgICAgICAgICBsb2coYml6ZG9jLCAiV0FSTklORyIsICJEZWxpdmVyeSIsICJTdXNwZW5kZWQg
cmVjZWl2ZXIncyBwcml2YXRlIHF1ZXVlICciICsgcXVldWVOYW1lICsgIiciLCAiT3JkZXJlZCBk
ZWxpdmVyeSBvZiByZWNlaXZlcidzIHByaXZhdGUgcXVldWUgJyIgKyBxdWV1ZU5hbWUgKyAiJyB3
YXMgc3VzcGVuZGVkIGR1ZSB0byB0YXNrIGV4aGF1c3Rpb24iKTsKICAgICAgICAgIH0gZWxzZSB7
CiAgICAgICAgICAgIGxvZyhiaXpkb2MsICJXQVJOSU5HIiwgIkRlbGl2ZXJ5IiwgIlN1c3BlbmRl
ZCBwdWJsaWMgcXVldWUgJyIgKyBxdWV1ZU5hbWUgKyAiJyIsICJPcmRlcmVkIGRlbGl2ZXJ5IG9m
IHB1YmxpYyBxdWV1ZSAnIiArIHF1ZXVlTmFtZSArICInIHdhcyBzdXNwZW5kZWQgZHVlIHRvIHRh
c2sgZXhoYXVzdGlvbiIpOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgYnJlYWtMb29w
ID0gdHJ1ZTsKICAgICAgfSBlbHNlIHsKICAgICAgICBpZiAoYml6ZG9jICE9IG51bGwgJiYgcmV0
cnlMaW1pdCA+IDApIGNvbS53bS5hcHAudG4uZGIuQml6RG9jU3RvcmUuY2hhbmdlU3RhdHVzKGJp
emRvYywgIkRPTkUgVy8gRVJST1JTIiwgZXhoYXVzdGVkU3RhdHVzKTsKICAgICAgfQogICAgfSBl
bHNlIGlmIChhdXRvbWF0aWNSZXRyeSkgewogICAgICBpZiAoYml6ZG9jICE9IG51bGwpIGNvbS53
bS5hcHAudG4uZGIuQml6RG9jU3RvcmUuY2hhbmdlU3RhdHVzKGJpemRvYywgIlFVRVVFRCIsICJS
RVFVRVVFRCIpOwogICAgICBicmVha0xvb3AgPSB0cnVlOwogICAgfSBlbHNlIHsKICAgICAgam9i
LnJldHJ5RmFpbGVkKCk7CiAgICAgIGpvYi5zZXRTdGF0dXMoY29tLndtLmFwcC50bi5kZWxpdmVy
eS5HdWFyYW50ZWVkSm9iLlFVRVVFRCk7CiAgICAgIGpvYi5zZXREZWZhdWx0U2VydmVySWQoKTsK
ICAgICAgaWYgKG9yZGVyZWQpIGpvYi5zZXRUaW1lVXBkYXRlZChqb2IuZ2V0VGltZUNyZWF0ZWQo
KSk7IC8vIGZvcmNlIHRoaXMgam9iIHRvIHRoZSBmcm9udCBvZiB0aGUgcXVldWUKICAgICAgdXBk
YXRlKGpvYik7CgogICAgICBpZiAoYml6ZG9jICE9IG51bGwpIGNvbS53bS5hcHAudG4uZGIuQml6
RG9jU3RvcmUuY2hhbmdlU3RhdHVzKGJpemRvYywgIlFVRVVFRCIsICJSRVFVRVVFRCIpOwogICAg
ICBicmVha0xvb3AgPSB0cnVlOwogICAgfQogIH0KCiAgcmV0dXJuIGJyZWFrTG9vcDsKfQoKLy8g
c2F2ZXMgdGhlIGdpdmVuIGpvYiB0byB0aGUgVHJhZGluZyBOZXR3b3JrcyBkYXRhYmFzZQpwcm90
ZWN0ZWQgc3RhdGljIHZvaWQgdXBkYXRlKGNvbS53bS5hcHAudG4uZGVsaXZlcnkuR3VhcmFudGVl
ZEpvYiBqb2IpIHRocm93cyBqYXZhLnNxbC5TUUxFeGNlcHRpb24sIGphdmEuaW8uSU9FeGNlcHRp
b24gewogIGphdmEuc3FsLkNvbm5lY3Rpb24gY29ubmVjdGlvbiA9IG51bGw7CiAgamF2YS5zcWwu
UHJlcGFyZWRTdGF0ZW1lbnQgc3RhdGVtZW50ID0gbnVsbDsKCiAgdHJ5IHsKICAgIGNvbm5lY3Rp
b24gPSBjb20ud20uYXBwLnRuLmRiLkRhdGFzdG9yZS5nZXRDb25uZWN0aW9uKCk7CiAgICBzdGF0
ZW1lbnQgPSBjb20ud20uYXBwLnRuLmRiLlNRTFN0YXRlbWVudHMucHJlcGFyZVN0YXRlbWVudChj
b25uZWN0aW9uLCBERUxJVkVSWV9KT0JfVVBEQVRFX1NRTF9TVEFURU1FTlQpOwogICAgc3RhdGVt
ZW50LmNsZWFyUGFyYW1ldGVycygpOwoKICAgIC8vIGluc3RlYWQgb2Ygc2V0dGluZyBUaW1lVXBk
YXRlZCB0byBub3csIHNldCBpdCB0byB0aGUgdGltZSBpbiB0aGUgam9iIG9iamVjdAogICAgY29t
LndtLmFwcC50bi5kYi5TUUxXcmFwcGVycy5zZXRUaW1lc3RhbXAoc3RhdGVtZW50LCAxLCBuZXcg
amF2YS5zcWwuVGltZXN0YW1wKGpvYi5nZXRUaW1lVXBkYXRlZCgpKSk7CgogICAgY29tLndtLmFw
cC50bi5kYi5TUUxXcmFwcGVycy5zZXRDaG9wcGVkU3RyaW5nKHN0YXRlbWVudCwgMiwgam9iLmdl
dFN0YXR1cygpLCAiRGVsaXZlcnlKb2IuSm9iU3RhdHVzIik7CiAgICBzdGF0ZW1lbnQuc2V0SW50
KDMsIGpvYi5nZXRSZXRyaWVzKCkpOwogICAgY29tLndtLmFwcC50bi5kYi5TUUxXcmFwcGVycy5z
ZXRDaG9wcGVkU3RyaW5nKHN0YXRlbWVudCwgNCwgam9iLmdldFRyYW5zcG9ydFN0YXR1cygpLCAi
RGVsaXZlcnlKb2IuVHJhbnNwb3J0U3RhdHVzIik7CiAgICBjb20ud20uYXBwLnRuLmRiLlNRTFdy
YXBwZXJzLnNldENob3BwZWRTdHJpbmcoc3RhdGVtZW50LCA1LCBqb2IuZ2V0VHJhbnNwb3J0U3Rh
dHVzTWVzc2FnZSgpLCAiRGVsaXZlcnlKb2IuVHJhbnNwb3J0U3RhdHVzTWVzc2FnZSIpOwogICAg
c3RhdGVtZW50LnNldEludCg2LCAoaW50KWpvYi5nZXRUcmFuc3BvcnRUaW1lKCkpOwogICAgY29t
LndtLmFwcC50bi5kYi5TUUxXcmFwcGVycy5zZXRCaW5hcnlTdHJlYW0oc3RhdGVtZW50LCA3LCBq
b2IuZ2V0T3V0cHV0RGF0YSgpKTsKICAgIGNvbS53bS5hcHAudG4uZGIuU1FMV3JhcHBlcnMuc2V0
Q2hvcHBlZFN0cmluZyhzdGF0ZW1lbnQsIDgsIGpvYi5nZXRTZXJ2ZXJJZCgpLCAiRGVsaXZlcnlK
b2IuU2VydmVySUQiKTsKICAgIGNvbS53bS5hcHAudG4uZGIuU1FMV3JhcHBlcnMuc2V0QmluYXJ5
U3RyZWFtKHN0YXRlbWVudCwgOSwgam9iLmdldERCSURhdGEoKSk7CiAgICBjb20ud20uYXBwLnRu
LmRiLlNRTFdyYXBwZXJzLnNldENob3BwZWRTdHJpbmcoc3RhdGVtZW50LCAxMCwgam9iLmdldFF1
ZXVlTmFtZSgpLCAiRGVsaXZlcnlRdWV1ZS5RdWV1ZU5hbWUiKTsKICAgIGNvbS53bS5hcHAudG4u
ZGIuU1FMV3JhcHBlcnMuc2V0Q2hvcHBlZFN0cmluZyhzdGF0ZW1lbnQsIDExLCBqb2IuZ2V0SW52
b2tlQXNVc2VyKCksICJEZWxpdmVyeUpvYi5Vc2VyTmFtZSIpOwogICAgY29tLndtLmFwcC50bi5k
Yi5TUUxXcmFwcGVycy5zZXRDaGFyU3RyaW5nKHN0YXRlbWVudCwgMTIsIGpvYi5nZXRKb2JJZCgp
KTsKCiAgICBzdGF0ZW1lbnQuZXhlY3V0ZVVwZGF0ZSgpOwogICAgY29ubmVjdGlvbi5jb21taXQo
KTsKICB9IGNhdGNoIChqYXZhLnNxbC5TUUxFeGNlcHRpb24gZXgpIHsKICAgIGNvbm5lY3Rpb24g
PSBjb20ud20uYXBwLnRuLmRiLkRhdGFzdG9yZS5oYW5kbGVTUUxFeGNlcHRpb24oY29ubmVjdGlv
biwgZXgpOwogICAgdGhyb3cgZXg7CiAgfSBmaW5hbGx5IHsKICAgIGNvbS53bS5hcHAudG4uZGIu
U1FMU3RhdGVtZW50cy5yZWxlYXNlU3RhdGVtZW50KHN0YXRlbWVudCk7CiAgICBjb20ud20uYXBw
LnRuLmRiLkRhdGFzdG9yZS5yZWxlYXNlQ29ubmVjdGlvbihjb25uZWN0aW9uKTsgICAgIAogIH0K
fQoKcHJvdGVjdGVkIHN0YXRpYyBmaW5hbCBTdHJpbmcgTE9HX1NFUlZJQ0VfTkFNRSA9ICJ0dW5k
cmEudG46bG9nIjsKcHJvdGVjdGVkIHN0YXRpYyBmaW5hbCBjb20ud20ubGFuZy5ucy5OU05hbWUg
TE9HX1NFUlZJQ0UgPSBjb20ud20ubGFuZy5ucy5OU05hbWUuY3JlYXRlKExPR19TRVJWSUNFX05B
TUUpOwoKcHJvdGVjdGVkIHN0YXRpYyB2b2lkIGxvZyhjb20ud20uYXBwLnRuLmRvYy5CaXpEb2NF
bnZlbG9wZSBiaXpkb2MsIFN0cmluZyB0eXBlLCBTdHJpbmcga2xhc3MsIFN0cmluZyBzdW1tYXJ5
LCBTdHJpbmcgbWVzc2FnZSkgdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24gewogIElEYXRhIGlucHV0
ID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOwogIElEYXRhQ3Vyc29yIGN1cnNvciA9IGlucHV0Lmdl
dEN1cnNvcigpOwogIElEYXRhVXRpbC5wdXQoY3Vyc29yLCAiJGJpemRvYyIsIGJpemRvYyk7CiAg
SURhdGFVdGlsLnB1dChjdXJzb3IsICIkdHlwZSIsIHR5cGUpOwogIElEYXRhVXRpbC5wdXQoY3Vy
c29yLCAiJGNsYXNzIiwga2xhc3MpOwogIElEYXRhVXRpbC5wdXQoY3Vyc29yLCAiJHN1bW1hcnki
LCBzdW1tYXJ5KTsKICBJRGF0YVV0aWwucHV0KGN1cnNvciwgIiRtZXNzYWdlIiwgbWVzc2FnZSk7
CiAgY3Vyc29yLmRlc3Ryb3koKTsKCiAgdHJ5IHsKICAgIFNlcnZpY2UuZG9JbnZva2UoTE9HX1NF
UlZJQ0UsIGlucHV0KTsKICB9IGNhdGNoIChTZXJ2aWNlRXhjZXB0aW9uIGV4KSB7CiAgICB0aHJv
dyBleDsKICB9IGNhdGNoIChFeGNlcHRpb24gZXgpIHsKICAgIHRocm93IG5ldyBTZXJ2aWNlRXhj
ZXB0aW9uKGV4LmdldENsYXNzKCkuZ2V0TmFtZSgpICsgIjogIiArIGV4LmdldE1lc3NhZ2UoKSk7
CiAgfQp9</value>
  <value name="extends"></value>
  <array name="implements" type="value" depth="1">
  </array>
  <array name="imports" type="value" depth="1">
  </array>
</Values>
