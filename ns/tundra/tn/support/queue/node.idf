<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="encodeutf8">true</value>
  <value name="shared">cHJvdGVjdGVkIGZpbmFsIHN0YXRpYyBTdHJpbmcgRVhFQ1VURV9UQVNLX1NFUlZJQ0VfTkFNRSA9
ICJ0dW5kcmEudG4uc3VwcG9ydC5xdWV1ZS50YXNrOmV4ZWN1dGUiOwpwcm90ZWN0ZWQgZmluYWwg
c3RhdGljIGNvbS53bS5sYW5nLm5zLk5TTmFtZSBFWEVDVVRFX1RBU0tfU0VSVklDRSA9IGNvbS53
bS5sYW5nLm5zLk5TTmFtZS5jcmVhdGUoRVhFQ1VURV9UQVNLX1NFUlZJQ0VfTkFNRSk7CnByb3Rl
Y3RlZCBmaW5hbCBzdGF0aWMgU3RyaW5nIERFTElWRVJfQkFUQ0hfU0VSVklDRV9OQU1FID0gIndt
LnRuLnF1ZXVpbmc6ZGVsaXZlckJhdGNoIjsKcHJvdGVjdGVkIHN0YXRpYyBmaW5hbCBTdHJpbmcg
REVMSVZFUllfSk9CX1VQREFURV9TUUxfU1RBVEVNRU5UID0gImRlbGl2ZXIuam9iLnVwZGF0ZSI7
CgovLyBkZXF1ZXVlcyBlYWNoIHRhc2sgb24gdGhlIGdpdmVuIFROIHF1ZXVlLCBhbmQgcHJvY2Vz
c2VzIHRoZSB0YXNrIHVzaW5nIHRoZSBnaXZlbiBzZXJ2aWNlIGFuZCBpbnB1dCBwaXBlbGluZTsK
Ly8gaWYgY29uY3VycmVuY3kgPiAxLCB0YXNrcyB3aWxsIGJlIHByb2Nlc3NlZCBieSBhIHRocmVh
ZCBwb29sIHdob3NlIHNpemUgaXMgZXF1YWwgdG8gdGhlIGRlc2lyZWQgY29uY3VycmVuY3ksCi8v
IG90aGVyd2lzZSB0aGV5IHdpbGwgYmUgcHJvY2Vzc2VkIG9uIHRoZSBjdXJyZW50IHRocmVhZApw
dWJsaWMgc3RhdGljIHZvaWQgZWFjaChTdHJpbmcgcXVldWVOYW1lLCBTdHJpbmcgc2VydmljZSwg
SURhdGEgcGlwZWxpbmUsIGludCBjb25jdXJyZW5jeSwgaW50IGJhdGNoTGltaXQsIGludCByZXRy
eUxpbWl0LCBib29sZWFuIG9yZGVyZWQpIHRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsKICB0cnkg
ewogICAgaWYgKGJhdGNoTGltaXQgPD0gMCkgYmF0Y2hMaW1pdCA9IEludGVnZXIuTUFYX1ZBTFVF
OwoKICAgIGNvbS53bS5hcHAudG4uZGVsaXZlcnkuRGVsaXZlcnlRdWV1ZSBxdWV1ZSA9IGNvbS53
bS5hcHAudG4uZGIuUXVldWVPcGVyYXRpb25zLnNlbGVjdEJ5TmFtZShxdWV1ZU5hbWUpOwogICAg
aWYgKHF1ZXVlID09IG51bGwpIHRocm93IG5ldyBTZXJ2aWNlRXhjZXB0aW9uKCJRdWV1ZSAnIiAr
IHF1ZXVlTmFtZSArICInIGRvZXMgbm90IGV4aXN0Iik7CgogICAgaWYgKGNvbmN1cnJlbmN5IDw9
IDEpIHsKICAgICAgZWFjaERpcmVjdChxdWV1ZSwgRVhFQ1VURV9UQVNLX1NFUlZJQ0UsIHNlcnZp
Y2UsIHBpcGVsaW5lLCBiYXRjaExpbWl0LCByZXRyeUxpbWl0LCBvcmRlcmVkKTsKICAgIH0gZWxz
ZSB7CiAgICAgIGVhY2hDb25jdXJyZW50KHF1ZXVlLCBFWEVDVVRFX1RBU0tfU0VSVklDRSwgc2Vy
dmljZSwgcGlwZWxpbmUsIGNvbmN1cnJlbmN5LCBiYXRjaExpbWl0LCByZXRyeUxpbWl0KTsKICAg
IH0KICB9IGNhdGNoIChqYXZhLnNxbC5TUUxFeGNlcHRpb24gZXgpIHsKICAgIHRocm93IG5ldyBT
ZXJ2aWNlRXhjZXB0aW9uKGV4LmdldENsYXNzKCkuZ2V0TmFtZSgpICsgIjogIiArIGV4LmdldE1l
c3NhZ2UoKSk7CiAgfSBjYXRjaCAoamF2YS5pby5JT0V4Y2VwdGlvbiBleCkgewogICAgdGhyb3cg
bmV3IFNlcnZpY2VFeGNlcHRpb24oZXguZ2V0Q2xhc3MoKS5nZXROYW1lKCkgKyAiOiAiICsgZXgu
Z2V0TWVzc2FnZSgpKTsKICB9Cn0KCi8vIGRlcXVldWVzIGVhY2ggdGFzayBvbiB0aGUgZ2l2ZW4g
VE4gcXVldWUsIGFuZCBwcm9jZXNzZXMgdGhlIHRhc2sgdXNpbmcgdGhlIGdpdmVuIHNlcnZpY2Ug
YW5kIGlucHV0IHBpcGVsaW5lCi8vIG9uIHRoZSBjdXJyZW50IHRocmVhZApwcm90ZWN0ZWQgc3Rh
dGljIHZvaWQgZWFjaERpcmVjdChjb20ud20uYXBwLnRuLmRlbGl2ZXJ5LkRlbGl2ZXJ5UXVldWUg
cXVldWUsIGNvbS53bS5sYW5nLm5zLk5TTmFtZSBleGVjdXRlVGFza1NlcnZpY2UsIFN0cmluZyBz
ZXJ2aWNlLCBJRGF0YSBwaXBlbGluZSwgaW50IGJhdGNoTGltaXQsIGludCByZXRyeUxpbWl0LCBi
b29sZWFuIG9yZGVyZWQpIHRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsKICBib29sZWFuIGludm9r
ZWRCeVRyYWRpbmdOZXR3b3JrcyA9IGludm9rZWRCeVRyYWRpbmdOZXR3b3JrcygpOwogIGludCB0
b3RhbCA9IDA7CgogIHRyeSB7CiAgICB3aGlsZSh0b3RhbCA8IGJhdGNoTGltaXQpIHsKICAgICAg
aWYgKCFpbnZva2VkQnlUcmFkaW5nTmV0d29ya3MgfHwgcXVldWUuaXNFbmFibGVkKCkgfHwgcXVl
dWUuaXNEcmFpbmluZygpKSB7CiAgICAgICAgY29tLndtLmFwcC50bi5kZWxpdmVyeS5HdWFyYW50
ZWVkSm9iIHRhc2sgPSBjb20ud20uYXBwLnRuLmRiLkRlbGl2ZXJ5U3RvcmUuZGVxdWV1ZU9sZGVz
dEpvYihxdWV1ZS5nZXRRdWV1ZU5hbWUoKSk7CiAgICAgICAgaWYgKHRhc2sgPT0gbnVsbCkgewog
ICAgICAgICAgYnJlYWs7IC8vIGlmIHRoZXJlIGFyZSBubyBtb3JlIHRhc2tzLCB0aGVuIGV4aXQK
ICAgICAgICB9IGVsc2UgewogICAgICAgICAgSURhdGEgb3V0cHV0ID0gY29tLndtLmFwcC5iMmIu
c2VydmVyLlNlcnZpY2UuZG9JbnZva2UoZXhlY3V0ZVRhc2tTZXJ2aWNlLCBjcmVhdGVUYXNrSW5w
dXRQaXBlbGluZSh0YXNrLCBzZXJ2aWNlLCBwaXBlbGluZSwgcXVldWUuZ2V0UXVldWVOYW1lKCks
IHF1ZXVlLmdldFF1ZXVlVHlwZSgpKSk7CiAgICAgICAgICB0b3RhbCsrOwoKICAgICAgICAgIGlm
IChyZXRyeSh0YXNrLCByZXRyeUxpbWl0LCBvcmRlcmVkKSkgeyAKICAgICAgICAgICAgYnJlYWs7
IC8vIGlmIHRoZSB0YXNrIG5lZWRzIHRvIGJlIHJldHJpZWQgYW5kIHRoZSBxdWV1ZSBpcyBiZWlu
ZyBwcm9jZXNzZWQgaW4tb3JkZXIsIGV4aXQgc28gYXMgbm90IHRvIHJldHJ5IHRoZSBzYW1lIHRh
c2sgaW1tZWRpYXRlbHkKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgaWYgKGludm9rZWRC
eVRyYWRpbmdOZXR3b3JrcykgcXVldWUgPSBjb20ud20uYXBwLnRuLmRiLlF1ZXVlT3BlcmF0aW9u
cy5zZWxlY3RCeU5hbWUocXVldWUuZ2V0UXVldWVOYW1lKCkpOwogICAgICB9IGVsc2UgewogICAg
ICAgIGJyZWFrOyAvLyBpZiBpbnZva2VkIGJ5IFROIGFuZCBxdWV1ZSBpcyBkaXNhYmxlZCBvciBz
dXNwZW5kZWQsIHRoZW4gZXhpdAogICAgICB9CiAgICB9CiAgfSBjYXRjaCAoRXhjZXB0aW9uIGV4
KSB7CiAgICBpZiAoZXggaW5zdGFuY2VvZiBTZXJ2aWNlRXhjZXB0aW9uKSB7CiAgICAgIHRocm93
IChTZXJ2aWNlRXhjZXB0aW9uKWV4OwogICAgfSBlbHNlIHsKICAgICAgdGhyb3cgbmV3IFNlcnZp
Y2VFeGNlcHRpb24oZXguZ2V0Q2xhc3MoKS5nZXROYW1lKCkgKyAiOiAiICsgZXguZ2V0TWVzc2Fn
ZSgpKTsKICAgIH0KICB9Cn0KCi8vIGRlcXVldWVzIGVhY2ggdGFzayBvbiB0aGUgZ2l2ZW4gVE4g
cXVldWUsIGFuZCBwcm9jZXNzZXMgdGhlIHRhc2sgdXNpbmcgdGhlIGdpdmVuIHNlcnZpY2UgYW5k
IGlucHV0IHBpcGVsaW5lOwovLyB0YXNrcyB3aWxsIGJlIHByb2Nlc3NlZCBieSBhIHRocmVhZCBw
b29sIHdob3NlIHNpemUgaXMgZXF1YWwgdG8gdGhlIGRlc2lyZWQgY29uY3VycmVuY3kKcHJvdGVj
dGVkIHN0YXRpYyB2b2lkIGVhY2hDb25jdXJyZW50KGNvbS53bS5hcHAudG4uZGVsaXZlcnkuRGVs
aXZlcnlRdWV1ZSBxdWV1ZSwgY29tLndtLmxhbmcubnMuTlNOYW1lIGV4ZWN1dGVUYXNrU2Vydmlj
ZSwgU3RyaW5nIHNlcnZpY2UsIElEYXRhIHBpcGVsaW5lLCBpbnQgY29uY3VycmVuY3ksIGludCBi
YXRjaExpbWl0LCBpbnQgcmV0cnlMaW1pdCkgdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24gewogIGJv
b2xlYW4gaW52b2tlZEJ5VHJhZGluZ05ldHdvcmtzID0gaW52b2tlZEJ5VHJhZGluZ05ldHdvcmtz
KCk7CgogIC8vIHVwcGVyIGJvdW5kIG9uIG51bWJlciBvZiB0YXNrcyBzdWJtaXR0ZWQgdG8gdGhy
ZWFkIHBvb2wgYXQgYW55IG9uZSB0aW1lCiAgaW50IGJhY2tsb2cgPSBjb25jdXJyZW5jeSAqIDI7
CiAgaW50IHRvdGFsID0gMDsKCiAgY29tLndtLmFwcC5iMmIuc2VydmVyLlNlc3Npb24gc2Vzc2lv
biA9IGNvbS53bS5hcHAuYjJiLnNlcnZlci5TZXJ2aWNlLmdldFNlc3Npb24oKTsKICBjb20ud20u
YXBwLmIyYi5zZXJ2ZXIuSW52b2tlU3RhdGUgc3RhdGUgPSBjb20ud20uYXBwLmIyYi5zZXJ2ZXIu
SW52b2tlU3RhdGUuZ2V0Q3VycmVudFN0YXRlKCk7CgogIGphdmEudXRpbC5jb25jdXJyZW50LkV4
ZWN1dG9yU2VydmljZSBleGVjdXRvciA9IGphdmEudXRpbC5jb25jdXJyZW50LkV4ZWN1dG9ycy5u
ZXdGaXhlZFRocmVhZFBvb2woY29uY3VycmVuY3ksIG5ldyBTZXJ2ZXJUaHJlYWRGYWN0b3J5KHF1
ZXVlLmdldFF1ZXVlTmFtZSgpLCBzdGF0ZSkpOwoKICBqYXZhLnV0aWwuUXVldWU8amF2YS51dGls
LmNvbmN1cnJlbnQuRnV0dXJlPElEYXRhPj4gZnV0dXJlcyA9IG5ldyBqYXZhLnV0aWwuTGlua2Vk
TGlzdDxqYXZhLnV0aWwuY29uY3VycmVudC5GdXR1cmU8SURhdGE+PigpOwogIGphdmEudXRpbC5M
aXN0PEV4Y2VwdGlvbj4gZXhjZXB0aW9ucyA9IG5ldyBqYXZhLnV0aWwuQXJyYXlMaXN0PEV4Y2Vw
dGlvbj4oKTsKCiAgdHJ5IHsKICAgIHdoaWxlKHRvdGFsIDwgYmF0Y2hMaW1pdCkgewogICAgICBp
ZiAoIWludm9rZWRCeVRyYWRpbmdOZXR3b3JrcyB8fCBxdWV1ZS5pc0VuYWJsZWQoKSB8fCBxdWV1
ZS5pc0RyYWluaW5nKCkpIHsKICAgICAgICBpbnQgc2l6ZSA9IGZ1dHVyZXMuc2l6ZSgpOwogICAg
ICAgIGlmIChzaXplIDwgYmFja2xvZykgewogICAgICAgICAgLy8gc3VibWl0IGFub3RoZXIgcXVl
dWVkIHRhc2sKICAgICAgICAgIGNvbS53bS5hcHAudG4uZGVsaXZlcnkuR3VhcmFudGVlZEpvYiB0
YXNrID0gY29tLndtLmFwcC50bi5kYi5EZWxpdmVyeVN0b3JlLmRlcXVldWVPbGRlc3RKb2IocXVl
dWUuZ2V0UXVldWVOYW1lKCkpOwogICAgICAgICAgaWYgKHRhc2sgPT0gbnVsbCkgewogICAgICAg
ICAgICBpZiAoc2l6ZSA+IDApIHsKICAgICAgICAgICAgICAvLyB3YWl0IGZvciBmaXJzdCB0aHJl
YWQgdG8gZmluaXNoOyBvbmNlIGZpbmlzaGVkIHdlJ2xsIGxvb3AgYWdhaW4gYW5kIHNlZSBpZiB0
aGVyZSBhcmUgbm93IHRhc2tzIG9uIHRoZSBxdWV1ZQogICAgICAgICAgICAgIGF3YWl0T2xkZXN0
KGZ1dHVyZXMsIHJldHJ5TGltaXQpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAg
IC8vIGlmIGFsbCB0aHJlYWRzIGhhdmUgZmluaXNoZWQgYW5kIHRoZXJlIGFyZSBubyBtb3JlIHRh
c2tzLCB0aGVuIGV4aXQKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQogICAgICAg
ICAgfSBlbHNlIHsKICAgICAgICAgICAgZnV0dXJlcy5hZGQoZXhlY3V0b3Iuc3VibWl0KG5ldyBD
YWxsYWJsZVNlcnZpY2UoZXhlY3V0ZVRhc2tTZXJ2aWNlLCBzZXNzaW9uLCBjcmVhdGVUYXNrSW5w
dXRQaXBlbGluZSh0YXNrLCBzZXJ2aWNlLCBwaXBlbGluZSwgcXVldWUuZ2V0UXVldWVOYW1lKCks
IHF1ZXVlLmdldFF1ZXVlVHlwZSgpKSkpKTsKICAgICAgICAgICAgdG90YWwrKzsKICAgICAgICAg
IH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgLy8gd2FpdCBmb3IgZmlyc3QgdGhyZWFkIHRv
IGZpbmlzaAogICAgICAgICAgYXdhaXRPbGRlc3QoZnV0dXJlcywgcmV0cnlMaW1pdCk7CiAgICAg
ICAgfQogICAgICAgIGlmIChpbnZva2VkQnlUcmFkaW5nTmV0d29ya3MpIHF1ZXVlID0gY29tLndt
LmFwcC50bi5kYi5RdWV1ZU9wZXJhdGlvbnMuc2VsZWN0QnlOYW1lKHF1ZXVlLmdldFF1ZXVlTmFt
ZSgpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBicmVhazsgLy8gaWYgaW52b2tlZCBieSBUTiBh
bmQgcXVldWUgaXMgZGlzYWJsZWQgb3Igc3VzcGVuZGVkLCB0aGVuIGV4aXQKICAgICAgfQogICAg
fQogIH0gY2F0Y2ggKGphdmEuc3FsLlNRTEV4Y2VwdGlvbiBleCkgewogICAgdGhyb3cgbmV3IFNl
cnZpY2VFeGNlcHRpb24oZXguZ2V0Q2xhc3MoKS5nZXROYW1lKCkgKyAiOiAiICsgZXguZ2V0TWVz
c2FnZSgpKTsKICB9IGNhdGNoIChqYXZhLmlvLklPRXhjZXB0aW9uIGV4KSB7CiAgICB0aHJvdyBu
ZXcgU2VydmljZUV4Y2VwdGlvbihleC5nZXRDbGFzcygpLmdldE5hbWUoKSArICI6ICIgKyBleC5n
ZXRNZXNzYWdlKCkpOwogIH0gY2F0Y2ggKGNvbS53bS5hcHAudG4uZGVsaXZlcnkuRGVsaXZlcnlF
eGNlcHRpb24gZXgpIHsKICAgIHRocm93IG5ldyBTZXJ2aWNlRXhjZXB0aW9uKGV4LmdldENsYXNz
KCkuZ2V0TmFtZSgpICsgIjogIiArIGV4LmdldE1lc3NhZ2UoKSk7CiAgfSBmaW5hbGx5IHsKICAg
IGV4ZWN1dG9yLnNodXRkb3duKCk7CiAgICBhd2FpdEFsbChmdXR1cmVzLCByZXRyeUxpbWl0KTsK
ICB9Cn0KCi8vIHdhaXRzIGZvciBhbGwgZnV0dXJlcyBpbiB0aGUgZ2l2ZW4gcXVldWUgdG8gY29t
cGxldGUKcHJvdGVjdGVkIHN0YXRpYyBqYXZhLnV0aWwuTGlzdDxJRGF0YT4gYXdhaXRBbGwoamF2
YS51dGlsLlF1ZXVlPGphdmEudXRpbC5jb25jdXJyZW50LkZ1dHVyZTxJRGF0YT4+IGZ1dHVyZXMs
IGludCByZXRyeUxpbWl0KSB7CiAgamF2YS51dGlsLkxpc3Q8SURhdGE+IHJlc3VsdHMgPSBuZXcg
amF2YS51dGlsLkFycmF5TGlzdDxJRGF0YT4oZnV0dXJlcy5zaXplKCkpOwogIHdoaWxlKGZ1dHVy
ZXMuc2l6ZSgpID4gMCkgewogICAgdHJ5IHsKICAgICAgcmVzdWx0cy5hZGQoYXdhaXRPbGRlc3Qo
ZnV0dXJlcywgcmV0cnlMaW1pdCkpOwogICAgfSBjYXRjaCAoRXhjZXB0aW9uIGV4KSB7CiAgICAg
IC8vIGlnbm9yZSBleGNlcHRpb25zCiAgICB9CiAgfQogIHJldHVybiByZXN1bHRzOwp9CgovLyB3
YWl0cyBmb3IgdGhlIGZpcnN0L2hlYWQgZnV0dXJlIGluIHRoZSBnaXZlbiBxdWV1ZSB0byBjb21w
bGV0ZQpwcm90ZWN0ZWQgc3RhdGljIElEYXRhIGF3YWl0T2xkZXN0KGphdmEudXRpbC5RdWV1ZTxq
YXZhLnV0aWwuY29uY3VycmVudC5GdXR1cmU8SURhdGE+PiBmdXR1cmVzLCBpbnQgcmV0cnlMaW1p
dCkgdGhyb3dzIGphdmEuc3FsLlNRTEV4Y2VwdGlvbiwgamF2YS5pby5JT0V4Y2VwdGlvbiwgU2Vy
dmljZUV4Y2VwdGlvbiB7CiAgcmV0dXJuIGF3YWl0KGZ1dHVyZXMucG9sbCgpLCByZXRyeUxpbWl0
KTsKfQoKLy8gd2FpdHMgZm9yIHRoZSBnaXZlbiBmdXR1cmUgdG8gY29tcGxldGUKcHJvdGVjdGVk
IHN0YXRpYyBJRGF0YSBhd2FpdChqYXZhLnV0aWwuY29uY3VycmVudC5GdXR1cmU8SURhdGE+IGZ1
dHVyZSwgaW50IHJldHJ5TGltaXQpIHRocm93cyBqYXZhLnNxbC5TUUxFeGNlcHRpb24sIGphdmEu
aW8uSU9FeGNlcHRpb24sIFNlcnZpY2VFeGNlcHRpb24gewogIElEYXRhIG91dHB1dCA9IG51bGw7
CiAgdHJ5IHsKICAgIG91dHB1dCA9IGZ1dHVyZS5nZXQoKTsKCiAgICBpZiAob3V0cHV0ICE9IG51
bGwpIHsKICAgICAgSURhdGFDdXJzb3IgY3Vyc29yID0gb3V0cHV0LmdldEN1cnNvcigpOwogICAg
ICBPYmplY3QgdGFzayA9IElEYXRhVXRpbC5nZXQoY3Vyc29yLCAidGFzayIpOwogICAgICBjdXJz
b3IuZGVzdHJveSgpOwoKICAgICAgaWYgKHRhc2sgIT0gbnVsbCAmJiB0YXNrIGluc3RhbmNlb2Yg
Y29tLndtLmFwcC50bi5kZWxpdmVyeS5HdWFyYW50ZWVkSm9iKSByZXRyeSgoY29tLndtLmFwcC50
bi5kZWxpdmVyeS5HdWFyYW50ZWVkSm9iKXRhc2ssIHJldHJ5TGltaXQpOwogICAgfQogIH0gY2F0
Y2ggKGphdmEudXRpbC5jb25jdXJyZW50LkV4ZWN1dGlvbkV4Y2VwdGlvbiBleCkgewogICAgLy8g
aWdub3JlIGV4Y2VwdGlvbnMKICB9IGNhdGNoKEludGVycnVwdGVkRXhjZXB0aW9uIGV4KSB7CiAg
ICAvLyBpZ25vcmUgZXhjZXB0aW9ucwogIH0KICByZXR1cm4gb3V0cHV0Owp9CgovLyByZXR1cm5z
IGEgbmV3IHBpcGVsaW5lIGZvciB0aGUgZXhlY3V0ZVRhc2tTZXJ2aWNlCnByb3RlY3RlZCBzdGF0
aWMgSURhdGEgY3JlYXRlVGFza0lucHV0UGlwZWxpbmUoY29tLndtLmFwcC50bi5kZWxpdmVyeS5H
dWFyYW50ZWVkSm9iIHRhc2ssIFN0cmluZyBzZXJ2aWNlLCBJRGF0YSBwaXBlbGluZSwgU3RyaW5n
IHF1ZXVlTmFtZSwgU3RyaW5nIHF1ZXVlVHlwZSkgdGhyb3dzIGphdmEuaW8uSU9FeGNlcHRpb24g
ewogIElEYXRhIG91dHB1dCA9IElEYXRhRmFjdG9yeS5jcmVhdGUoKTsKICBJRGF0YUN1cnNvciBj
dXJzb3IgPSBvdXRwdXQuZ2V0Q3Vyc29yKCk7CiAgSURhdGFVdGlsLnB1dChjdXJzb3IsICJ0YXNr
IiwgdGFzayk7CiAgSURhdGFVdGlsLnB1dChjdXJzb3IsICJ0aW1lRGVxdWV1ZWQiLCBTeXN0ZW0u
Y3VycmVudFRpbWVNaWxsaXMoKSk7CiAgSURhdGFVdGlsLnB1dChjdXJzb3IsICIkc2VydmljZSIs
IHNlcnZpY2UpOwogIElEYXRhVXRpbC5wdXQoY3Vyc29yLCAiJHBpcGVsaW5lIiwgSURhdGFVdGls
LmRlZXBDbG9uZShwaXBlbGluZSkpOwogIElEYXRhVXRpbC5wdXQoY3Vyc29yLCAicXVldWUiLCBx
dWV1ZU5hbWUpOwogIElEYXRhVXRpbC5wdXQoY3Vyc29yLCAicXVldWUudHlwZSIsIHF1ZXVlVHlw
ZSk7CiAgY3Vyc29yLmRlc3Ryb3koKTsKCiAgcmV0dXJuIG91dHB1dDsKfQoKLy8gcmV0dXJucyB0
cnVlIGlmIHRoZSBpbnZvY2F0aW9uIGNhbGxzdGFjayBpbmNsdWRlcyB0aGUgV21UTi93bS50bi5x
dWV1aW5nOmRlbGl2ZXJCYXRjaCBzZXJ2aWNlCnByb3RlY3RlZCBzdGF0aWMgYm9vbGVhbiBpbnZv
a2VkQnlUcmFkaW5nTmV0d29ya3MoKSB7CiAgamF2YS51dGlsLkl0ZXJhdG9yIGl0ZXJhdG9yID0g
Y29tLndtLmFwcC5iMmIuc2VydmVyLkludm9rZVN0YXRlLmdldEN1cnJlbnRTdGF0ZSgpLmdldENh
bGxTdGFjaygpLml0ZXJhdG9yKCk7CiAgYm9vbGVhbiByZXN1bHQgPSBmYWxzZTsKICB3aGlsZShp
dGVyYXRvci5oYXNOZXh0KCkpIHsKICAgIHJlc3VsdCA9IGl0ZXJhdG9yLm5leHQoKS50b1N0cmlu
ZygpLmVxdWFscyhERUxJVkVSX0JBVENIX1NFUlZJQ0VfTkFNRSk7CiAgICBpZiAocmVzdWx0KSBi
cmVhazsKICB9CiAgcmV0dXJuIHJlc3VsdDsKfQoKLy8gd3JhcHMgYSBjYWxsIHRvIGFuIElTIHNl
cnZpY2Ugd2l0aCBhIHN0YW5kYXJkIGphdmEudXRpbC5jb25jdXJyZW50LmNhbGxhYmxlIGludGVy
ZmFjZSwgc28gdGhhdCBpdCBjYW4KLy8gYmUgdXNlZCBieSBqYXZhLnV0aWwuY29uY3VycmVudCBl
eGVjdXRvcnMKcHVibGljIHN0YXRpYyBjbGFzcyBDYWxsYWJsZVNlcnZpY2UgaW1wbGVtZW50cyBq
YXZhLnV0aWwuY29uY3VycmVudC5DYWxsYWJsZTxJRGF0YT4gewogIHByb3RlY3RlZCBjb20ud20u
bGFuZy5ucy5OU05hbWUgc2VydmljZTsKICBwcm90ZWN0ZWQgSURhdGEgaW5wdXQ7CiAgcHJvdGVj
dGVkIGNvbS53bS5hcHAuYjJiLnNlcnZlci5TZXNzaW9uIHNlc3Npb247CgogIHB1YmxpYyBDYWxs
YWJsZVNlcnZpY2UoU3RyaW5nIHNlcnZpY2UsIGNvbS53bS5hcHAuYjJiLnNlcnZlci5TZXNzaW9u
IHNlc3Npb24sIElEYXRhIGlucHV0KSB7CiAgICB0aGlzKGNvbS53bS5sYW5nLm5zLk5TTmFtZS5j
cmVhdGUoc2VydmljZSksIHNlc3Npb24sIGlucHV0KTsKICB9CgogIHB1YmxpYyBDYWxsYWJsZVNl
cnZpY2UoY29tLndtLmxhbmcubnMuTlNOYW1lIHNlcnZpY2UsIGNvbS53bS5hcHAuYjJiLnNlcnZl
ci5TZXNzaW9uIHNlc3Npb24sIElEYXRhIGlucHV0KSB7CiAgICB0aGlzLnNlcnZpY2UgPSBzZXJ2
aWNlOwogICAgdGhpcy5pbnB1dCA9IGlucHV0OwogICAgdGhpcy5zZXNzaW9uID0gc2Vzc2lvbjsK
ICB9CgogIHB1YmxpYyBJRGF0YSBjYWxsKCkgdGhyb3dzIEV4Y2VwdGlvbiB7CiAgICByZXR1cm4g
Y29tLndtLmFwcC5iMmIuc2VydmVyLlNlcnZpY2UuZG9JbnZva2Uoc2VydmljZSwgc2Vzc2lvbiwg
aW5wdXQpOwogIH0KfSAKCi8vIGEgdGhyZWFkIGZhY3Rvcnkgd2hpY2ggY3JlYXRlcyBJUyB0aHJl
YWRzIHdpdGggdGhlIGdpdmVuIGludm9rZSBzdGF0ZQpwdWJsaWMgc3RhdGljIGNsYXNzIFNlcnZl
clRocmVhZEZhY3RvcnkgaW1wbGVtZW50cyBqYXZhLnV0aWwuY29uY3VycmVudC5UaHJlYWRGYWN0
b3J5IHsKICBTdHJpbmcgcXVldWU7CiAgcHJvdGVjdGVkIGNvbS53bS5hcHAuYjJiLnNlcnZlci5J
bnZva2VTdGF0ZSBzdGF0ZTsKICBwcm90ZWN0ZWQgbG9uZyBjb3VudCA9IDE7CgogIHB1YmxpYyBT
ZXJ2ZXJUaHJlYWRGYWN0b3J5KFN0cmluZyBxdWV1ZSwgY29tLndtLmFwcC5iMmIuc2VydmVyLklu
dm9rZVN0YXRlIHN0YXRlKSB7CiAgICB0aGlzLnF1ZXVlID0gcXVldWU7CiAgICB0aGlzLnN0YXRl
ID0gc3RhdGU7CiAgfQoKICBwdWJsaWMgVGhyZWFkIG5ld1RocmVhZChSdW5uYWJsZSByKSB7CiAg
ICBjb20ud20uYXBwLmIyYi5zZXJ2ZXIuU2VydmVyVGhyZWFkIHRocmVhZCA9IG5ldyBjb20ud20u
YXBwLmIyYi5zZXJ2ZXIuU2VydmVyVGhyZWFkKHIpOwogICAgdGhyZWFkLnNldEludm9rZVN0YXRl
KGNsb25lSW52b2tlU3RhdGVXaXRoU3RhY2soKSk7CiAgICB0aHJlYWQuc2V0TmFtZSgiVHVuZHJh
VE4vUXVldWUgJyIgKyBxdWV1ZSArICInIFRocmVhZCMiICsgU3RyaW5nLmZvcm1hdCgiJTAzZCIs
IGNvdW50KyspKTsKICAgIHJldHVybiB0aHJlYWQ7CiAgfQoKICBwcm90ZWN0ZWQgY29tLndtLmFw
cC5iMmIuc2VydmVyLkludm9rZVN0YXRlIGNsb25lSW52b2tlU3RhdGVXaXRoU3RhY2soKSB7CiAg
ICBjb20ud20uYXBwLmIyYi5zZXJ2ZXIuSW52b2tlU3RhdGUgb3V0cHV0U3RhdGUgPSAoY29tLndt
LmFwcC5iMmIuc2VydmVyLkludm9rZVN0YXRlKXN0YXRlLmNsb25lKCk7CiAgICBqYXZhLnV0aWwu
U3RhY2sgc3RhY2sgPSAoamF2YS51dGlsLlN0YWNrKXN0YXRlLmdldENhbGxTdGFjaygpLmNsb25l
KCk7CiAgICB3aGlsZSghc3RhY2suZW1wdHkoKSkgewogICAgICBjb20ud20ubGFuZy5ucy5OU1Nl
cnZpY2Ugc2VydmljZSA9IChjb20ud20ubGFuZy5ucy5OU1NlcnZpY2Upc3RhY2sucmVtb3ZlKDAp
OwogICAgICBvdXRwdXRTdGF0ZS5wdXNoU2VydmljZShzZXJ2aWNlKTsKICAgIH0KICAgIHJldHVy
biBvdXRwdXRTdGF0ZTsKICB9Cn0KCi8vIHJlLWVucXVldWVzIHRoZSBnaXZlbiBqb2IgZm9yIGRl
bGl2ZXJ5LCB1bmxlc3MgaXQgaGFzIHJlYWNoZWQgaXRzIHJldHJ5IGxpbWl0CnByb3RlY3RlZCBz
dGF0aWMgYm9vbGVhbiByZXRyeShjb20ud20uYXBwLnRuLmRlbGl2ZXJ5Lkd1YXJhbnRlZWRKb2Ig
am9iLCBpbnQgcmV0cnlMaW1pdCkgdGhyb3dzIGphdmEuc3FsLlNRTEV4Y2VwdGlvbiwgamF2YS5p
by5JT0V4Y2VwdGlvbiwgU2VydmljZUV4Y2VwdGlvbiB7CiAgcmV0dXJuIHJldHJ5KGpvYiwgcmV0
cnlMaW1pdCwgZmFsc2UpOwp9CgovLyByZS1lbnF1ZXVlcyB0aGUgZ2l2ZW4gam9iIGZvciBkZWxp
dmVyeSwgdW5sZXNzIGl0IGhhcyByZWFjaGVkIGl0cyByZXRyeSBsaW1pdApwcm90ZWN0ZWQgc3Rh
dGljIGJvb2xlYW4gcmV0cnkoY29tLndtLmFwcC50bi5kZWxpdmVyeS5HdWFyYW50ZWVkSm9iIGpv
YiwgaW50IHJldHJ5TGltaXQsIGJvb2xlYW4gb3JkZXJlZCkgdGhyb3dzIGphdmEuc3FsLlNRTEV4
Y2VwdGlvbiwgamF2YS5pby5JT0V4Y2VwdGlvbiwgU2VydmljZUV4Y2VwdGlvbiB7CiAgam9iID0g
Y29tLndtLmFwcC50bi5kYi5EZWxpdmVyeVN0b3JlLmdldEFueUpvYihqb2IuZ2V0Sm9iSWQoKSwg
dHJ1ZSk7IC8vIHJlZmV0Y2ggam9iIGZyb20gREIKICBjb20ud20uYXBwLnRuLmRvYy5CaXpEb2NF
bnZlbG9wZSBiaXpkb2MgPSBqb2IuZ2V0Qml6RG9jRW52ZWxvcGUoKTsKCiAgaW50IGpvYkxpbWl0
ID0gam9iLmdldFJldHJ5TGltaXQoKTsKICBpbnQgcmV0cmllcyA9IGpvYi5nZXRSZXRyaWVzKCk7
CiAgU3RyaW5nIHN0YXR1cyA9IGpvYi5nZXRTdGF0dXMoKTsKICBTdHJpbmcgcXVldWVOYW1lID0g
am9iLmdldFF1ZXVlTmFtZSgpOwogIGNvbS53bS5hcHAudG4uZGVsaXZlcnkuRGVsaXZlcnlRdWV1
ZSBxdWV1ZSA9IHR1bmRyYS50bi5xdWV1ZS5nZXQocXVldWVOYW1lKTsKCiAgYm9vbGVhbiBhdXRv
bWF0aWNSZXRyeSA9IGpvYkxpbWl0ID4gMDsKICBpZiAoYXV0b21hdGljUmV0cnkpIHJldHJ5TGlt
aXQgPSBqb2JMaW1pdDsgLy8gaG9ub3VyIHRoZSByZXRyeSBzZXR0aW5ncyBvbiB0aGUgdGFzawog
IGJvb2xlYW4gZXhoYXVzdGVkID0gcmV0cmllcyA+PSByZXRyeUxpbWl0OwoKICBib29sZWFuIGZh
aWxlZCA9IChqb2JMaW1pdCA+IDAgJiYgcmV0cmllcyA+IDAgJiYgc3RhdHVzLmVxdWFscygiUVVF
VUVEIikpIHx8ICgoam9iTGltaXQgPD0gMCB8fCBleGhhdXN0ZWQpICYmIHN0YXR1cy5lcXVhbHMo
IkZBSUxFRCIpKTsKCiAgaWYgKGZhaWxlZCkgewogICAgaWYgKGV4aGF1c3RlZCkgewogICAgICBp
ZiAob3JkZXJlZCkgewogICAgICAgIC8vIHJlc2V0IHJldHJpZXMgYmFjayB0byAwCiAgICAgICAg
am9iLnNldFJldHJpZXMoMCk7CiAgICAgICAgam9iLnNldFN0YXR1cyhjb20ud20uYXBwLnRuLmRl
bGl2ZXJ5Lkd1YXJhbnRlZWRKb2IuUVVFVUVEKTsKICAgICAgICBqb2Iuc2V0RGVmYXVsdFNlcnZl
cklkKCk7CiAgICAgICAgam9iLnNldFRpbWVVcGRhdGVkKGpvYi5nZXRUaW1lQ3JlYXRlZCgpKTsg
Ly8gZm9yY2UgdGhpcyBqb2IgdG8gdGhlIGZyb250IG9mIHRoZSBxdWV1ZQogICAgICAgIHVwZGF0
ZShqb2IpOwoKICAgICAgICAvLyBzdXNwZW5kIHRoZSBxdWV1ZQogICAgICAgIHR1bmRyYS50bi5x
dWV1ZS5zdXNwZW5kKHF1ZXVlTmFtZSk7CgogICAgICAgIGlmIChiaXpkb2MgIT0gbnVsbCkgewog
ICAgICAgICAgY29tLndtLmFwcC50bi5kYi5CaXpEb2NTdG9yZS5jaGFuZ2VTdGF0dXMoYml6ZG9j
LCAiUVVFVUVEIiwgIlNVU1BFTkRFRCIpOwogICAgICAgICAgaWYgKHF1ZXVlLmdldFF1ZXVlVHlw
ZSgpLmVxdWFscygicHJpdmF0ZSIpKSB7CiAgICAgICAgICAgIGxvZyhiaXpkb2MsICJXQVJOSU5H
IiwgIkRlbGl2ZXJ5IiwgIlN1c3BlbmRlZCByZWNlaXZlcidzIHByaXZhdGUgcXVldWUgJyIgKyBx
dWV1ZU5hbWUgKyAiJyIsICJPcmRlcmVkIGRlbGl2ZXJ5IG9mIHJlY2VpdmVyJ3MgcHJpdmF0ZSBx
dWV1ZSAnIiArIHF1ZXVlTmFtZSArICInIHdhcyBzdXNwZW5kZWQgZHVlIHRvIHRhc2sgZXhoYXVz
dGlvbiIpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbG9nKGJpemRvYywgIldBUk5J
TkciLCAiRGVsaXZlcnkiLCAiU3VzcGVuZGVkIHB1YmxpYyBxdWV1ZSAnIiArIHF1ZXVlTmFtZSAr
ICInIiwgIk9yZGVyZWQgZGVsaXZlcnkgb2YgcHVibGljIHF1ZXVlICciICsgcXVldWVOYW1lICsg
Iicgd2FzIHN1c3BlbmRlZCBkdWUgdG8gdGFzayBleGhhdXN0aW9uIik7CiAgICAgICAgICB9CiAg
ICAgICAgfQogICAgICB9CiAgICB9IGVsc2UgaWYgKGF1dG9tYXRpY1JldHJ5KSB7CiAgICAgIGlm
IChiaXpkb2MgIT0gbnVsbCkgY29tLndtLmFwcC50bi5kYi5CaXpEb2NTdG9yZS5jaGFuZ2VTdGF0
dXMoYml6ZG9jLCAiUVVFVUVEIiwgIlJFUVVFVUVEIik7CiAgICB9IGVsc2UgewogICAgICBqb2Iu
cmV0cnlGYWlsZWQoKTsKICAgICAgam9iLnNldFN0YXR1cyhjb20ud20uYXBwLnRuLmRlbGl2ZXJ5
Lkd1YXJhbnRlZWRKb2IuUVVFVUVEKTsKICAgICAgam9iLnNldERlZmF1bHRTZXJ2ZXJJZCgpOwog
ICAgICBpZiAob3JkZXJlZCkgam9iLnNldFRpbWVVcGRhdGVkKGpvYi5nZXRUaW1lQ3JlYXRlZCgp
KTsgLy8gZm9yY2UgdGhpcyBqb2IgdG8gdGhlIGZyb250IG9mIHRoZSBxdWV1ZQogICAgICB1cGRh
dGUoam9iKTsKCiAgICAgIGlmIChiaXpkb2MgIT0gbnVsbCkgY29tLndtLmFwcC50bi5kYi5CaXpE
b2NTdG9yZS5jaGFuZ2VTdGF0dXMoYml6ZG9jLCAiUVVFVUVEIiwgIlJFUVVFVUVEIik7CiAgICB9
CiAgfQoKICByZXR1cm4gZmFpbGVkICYmIG9yZGVyZWQ7Cn0KCi8vIHNhdmVzIHRoZSBnaXZlbiBq
b2IgdG8gdGhlIFRyYWRpbmcgTmV0d29ya3MgZGF0YWJhc2UKcHJvdGVjdGVkIHN0YXRpYyB2b2lk
IHVwZGF0ZShjb20ud20uYXBwLnRuLmRlbGl2ZXJ5Lkd1YXJhbnRlZWRKb2Igam9iKSB0aHJvd3Mg
amF2YS5zcWwuU1FMRXhjZXB0aW9uLCBqYXZhLmlvLklPRXhjZXB0aW9uIHsKICBqYXZhLnNxbC5D
b25uZWN0aW9uIGNvbm5lY3Rpb24gPSBudWxsOwogIGphdmEuc3FsLlByZXBhcmVkU3RhdGVtZW50
IHN0YXRlbWVudCA9IG51bGw7CgogIHRyeSB7CiAgICBjb25uZWN0aW9uID0gY29tLndtLmFwcC50
bi5kYi5EYXRhc3RvcmUuZ2V0Q29ubmVjdGlvbigpOwogICAgc3RhdGVtZW50ID0gY29tLndtLmFw
cC50bi5kYi5TUUxTdGF0ZW1lbnRzLnByZXBhcmVTdGF0ZW1lbnQoY29ubmVjdGlvbiwgREVMSVZF
UllfSk9CX1VQREFURV9TUUxfU1RBVEVNRU5UKTsKICAgIHN0YXRlbWVudC5jbGVhclBhcmFtZXRl
cnMoKTsKCiAgICAvLyBpbnN0ZWFkIG9mIHNldHRpbmcgVGltZVVwZGF0ZWQgdG8gbm93LCBzZXQg
aXQgdG8gdGhlIHRpbWUgaW4gdGhlIGpvYiBvYmplY3QKICAgIGNvbS53bS5hcHAudG4uZGIuU1FM
V3JhcHBlcnMuc2V0VGltZXN0YW1wKHN0YXRlbWVudCwgMSwgbmV3IGphdmEuc3FsLlRpbWVzdGFt
cChqb2IuZ2V0VGltZVVwZGF0ZWQoKSkpOwoKICAgIGNvbS53bS5hcHAudG4uZGIuU1FMV3JhcHBl
cnMuc2V0Q2hvcHBlZFN0cmluZyhzdGF0ZW1lbnQsIDIsIGpvYi5nZXRTdGF0dXMoKSwgIkRlbGl2
ZXJ5Sm9iLkpvYlN0YXR1cyIpOwogICAgc3RhdGVtZW50LnNldEludCgzLCBqb2IuZ2V0UmV0cmll
cygpKTsKICAgIGNvbS53bS5hcHAudG4uZGIuU1FMV3JhcHBlcnMuc2V0Q2hvcHBlZFN0cmluZyhz
dGF0ZW1lbnQsIDQsIGpvYi5nZXRUcmFuc3BvcnRTdGF0dXMoKSwgIkRlbGl2ZXJ5Sm9iLlRyYW5z
cG9ydFN0YXR1cyIpOwogICAgY29tLndtLmFwcC50bi5kYi5TUUxXcmFwcGVycy5zZXRDaG9wcGVk
U3RyaW5nKHN0YXRlbWVudCwgNSwgam9iLmdldFRyYW5zcG9ydFN0YXR1c01lc3NhZ2UoKSwgIkRl
bGl2ZXJ5Sm9iLlRyYW5zcG9ydFN0YXR1c01lc3NhZ2UiKTsKICAgIHN0YXRlbWVudC5zZXRJbnQo
NiwgKGludClqb2IuZ2V0VHJhbnNwb3J0VGltZSgpKTsKICAgIGNvbS53bS5hcHAudG4uZGIuU1FM
V3JhcHBlcnMuc2V0QmluYXJ5U3RyZWFtKHN0YXRlbWVudCwgNywgam9iLmdldE91dHB1dERhdGEo
KSk7CiAgICBjb20ud20uYXBwLnRuLmRiLlNRTFdyYXBwZXJzLnNldENob3BwZWRTdHJpbmcoc3Rh
dGVtZW50LCA4LCBqb2IuZ2V0U2VydmVySWQoKSwgIkRlbGl2ZXJ5Sm9iLlNlcnZlcklEIik7CiAg
ICBjb20ud20uYXBwLnRuLmRiLlNRTFdyYXBwZXJzLnNldEJpbmFyeVN0cmVhbShzdGF0ZW1lbnQs
IDksIGpvYi5nZXREQklEYXRhKCkpOwogICAgY29tLndtLmFwcC50bi5kYi5TUUxXcmFwcGVycy5z
ZXRDaG9wcGVkU3RyaW5nKHN0YXRlbWVudCwgMTAsIGpvYi5nZXRRdWV1ZU5hbWUoKSwgIkRlbGl2
ZXJ5UXVldWUuUXVldWVOYW1lIik7CiAgICBjb20ud20uYXBwLnRuLmRiLlNRTFdyYXBwZXJzLnNl
dENob3BwZWRTdHJpbmcoc3RhdGVtZW50LCAxMSwgam9iLmdldEludm9rZUFzVXNlcigpLCAiRGVs
aXZlcnlKb2IuVXNlck5hbWUiKTsKICAgIGNvbS53bS5hcHAudG4uZGIuU1FMV3JhcHBlcnMuc2V0
Q2hhclN0cmluZyhzdGF0ZW1lbnQsIDEyLCBqb2IuZ2V0Sm9iSWQoKSk7CgogICAgc3RhdGVtZW50
LmV4ZWN1dGVVcGRhdGUoKTsKICAgIGNvbm5lY3Rpb24uY29tbWl0KCk7CiAgfSBjYXRjaCAoamF2
YS5zcWwuU1FMRXhjZXB0aW9uIGV4KSB7CiAgICBjb25uZWN0aW9uID0gY29tLndtLmFwcC50bi5k
Yi5EYXRhc3RvcmUuaGFuZGxlU1FMRXhjZXB0aW9uKGNvbm5lY3Rpb24sIGV4KTsKICAgIHRocm93
IGV4OwogIH0gZmluYWxseSB7CiAgICBjb20ud20uYXBwLnRuLmRiLlNRTFN0YXRlbWVudHMucmVs
ZWFzZVN0YXRlbWVudChzdGF0ZW1lbnQpOwogICAgY29tLndtLmFwcC50bi5kYi5EYXRhc3RvcmUu
cmVsZWFzZUNvbm5lY3Rpb24oY29ubmVjdGlvbik7ICAgICAKICB9Cn0KCnByb3RlY3RlZCBzdGF0
aWMgZmluYWwgU3RyaW5nIExPR19TRVJWSUNFX05BTUUgPSAidHVuZHJhLnRuOmxvZyI7CnByb3Rl
Y3RlZCBzdGF0aWMgZmluYWwgY29tLndtLmxhbmcubnMuTlNOYW1lIExPR19TRVJWSUNFID0gY29t
LndtLmxhbmcubnMuTlNOYW1lLmNyZWF0ZShMT0dfU0VSVklDRV9OQU1FKTsKCnByb3RlY3RlZCBz
dGF0aWMgdm9pZCBsb2coY29tLndtLmFwcC50bi5kb2MuQml6RG9jRW52ZWxvcGUgYml6ZG9jLCBT
dHJpbmcgdHlwZSwgU3RyaW5nIGtsYXNzLCBTdHJpbmcgc3VtbWFyeSwgU3RyaW5nIG1lc3NhZ2Up
IHRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsKICBJRGF0YSBpbnB1dCA9IElEYXRhRmFjdG9yeS5j
cmVhdGUoKTsKICBJRGF0YUN1cnNvciBjdXJzb3IgPSBpbnB1dC5nZXRDdXJzb3IoKTsKICBJRGF0
YVV0aWwucHV0KGN1cnNvciwgIiRiaXpkb2MiLCBiaXpkb2MpOwogIElEYXRhVXRpbC5wdXQoY3Vy
c29yLCAiJHR5cGUiLCB0eXBlKTsKICBJRGF0YVV0aWwucHV0KGN1cnNvciwgIiRjbGFzcyIsIGts
YXNzKTsKICBJRGF0YVV0aWwucHV0KGN1cnNvciwgIiRzdW1tYXJ5Iiwgc3VtbWFyeSk7CiAgSURh
dGFVdGlsLnB1dChjdXJzb3IsICIkbWVzc2FnZSIsIG1lc3NhZ2UpOwogIGN1cnNvci5kZXN0cm95
KCk7CgogIHRyeSB7CiAgICBTZXJ2aWNlLmRvSW52b2tlKExPR19TRVJWSUNFLCBpbnB1dCk7CiAg
fSBjYXRjaCAoU2VydmljZUV4Y2VwdGlvbiBleCkgewogICAgdGhyb3cgZXg7CiAgfSBjYXRjaCAo
RXhjZXB0aW9uIGV4KSB7CiAgICB0aHJvdyBuZXcgU2VydmljZUV4Y2VwdGlvbihleC5nZXRDbGFz
cygpLmdldE5hbWUoKSArICI6ICIgKyBleC5nZXRNZXNzYWdlKCkpOwogIH0KfQ==</value>
  <value name="extends"></value>
  <array name="implements" type="value" depth="1">
  </array>
  <array name="imports" type="value" depth="1">
  </array>
</Values>
